name: Build - Windows

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - "src/**"
      - ".github/workflows/build-windows.yml"
  merge_group:
  push:
    paths:
      - "src/**"
      - ".github/workflows/build-windows.yml"
    branches:
      - main

permissions:
  contents: read
  pull-requests: read

env:
  LUKKA_RUN_VCPKG_SHA: "${{ vars.LUKKA_RUN_VCPKG_SHA }}"
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  MAKEFLAGS: "-j 2"

jobs:
  cancel-runs:
    if: github.event_name == 'pull_request' && github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  build:
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}

    concurrency:
      group: otclient-${{ github.workflow }}-${{ github.ref }}-${{ matrix.buildtype }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022]
        buildtype: [windows-release]
        include:
          - os: windows-2022
            triplet: x64-windows-static
            packages: sccache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

        with:
          repository: ${{ github.event_name == 'push' && github.repository || (github.event.pull_request.head.repo.fork && github.repository || github.event.pull_request.head.repo.full_name) }}
          ref: ${{ github.event_name == 'push' && github.ref || (github.event.pull_request.head.repo.fork && github.event.pull_request.base.ref || github.event.pull_request.head.ref) }}
          fetch-depth: 0
      - name: Get vcpkg commit ID
        id: vcpkg-step
        shell: pwsh
        run: |
          $json = Get-Content vcpkg.json -Raw | ConvertFrom-Json
          $commit = $json.'builtin-baseline'
          echo "vcpkgGitCommitId=$commit" >> $env:GITHUB_OUTPUT

      - name: Compute vcpkg.json hash
        id: hash
        shell: pwsh
        run: |
          $json = Get-Content "vcpkg.json" -Raw -Encoding UTF8
          $bytes = [System.Text.Encoding]::UTF8.GetBytes($json)
          $sha256 = [System.Security.Cryptography.SHA256]::Create()
          $hashBytes = $sha256.ComputeHash($bytes)
          $hash = [BitConverter]::ToString($hashBytes) -replace '-', ''
          "hash=$hash" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Cache vcpkg artifacts (Windows)
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/vcpkg/installed
            ${{ github.workspace }}/vcpkg/buildtrees
            ${{ github.workspace }}/vcpkg/downloads
          key: vcpkg-${{ matrix.os }}-${{ matrix.buildtype }}-${{ steps.hash.outputs.hash }}
          restore-keys: |
            vcpkg-${{ matrix.os }}-${{ matrix.buildtype }}-

      - name: CCache with SCCACHE
        uses: hendrikmuhs/ccache-action@main
        with:
          max-size: "1G"
          variant: "sccache"
          key: ccache-${{ matrix.os }}-${{ matrix.buildtype }}
          restore-keys: |
            ccache-${{ matrix.os }}-${{ matrix.buildtype }}

      - name: Remove Windows pre-installed MySQL (for clean builds)
        run: Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "C:/mysql*"

      - name: Install vcpkg
        if: ${{ matrix.buildtype == 'windows-release' }}
        uses: lukka/run-vcpkg@a400452f634fe49e9f18d388aeb1809dcc642136
        with:
          vcpkgGitCommitId: ${{ steps.vcpkg-step.outputs.vcpkgGitCommitId }}


      - name: Validate vcpkg baseline SHA
        shell: pwsh
        run: |
          $SHAS = "${{ steps.vcpkg-step.outputs.vcpkgGitCommitId }}"
          if ([string]::IsNullOrEmpty($SHAS)) {
            echo "::error title=Missing vcpkg baseline::Provide a full 40-char vcpkgGitCommitId."
            exit 1
          }
          if ($SHAS -notmatch '^[0-9a-f]{40}$') {
            echo "::error title=Invalid vcpkg baseline::vcpkgGitCommitId must be a full 40-char commit SHA."
            exit 1
          }
      - name: Get latest CMake and Ninja
        uses: lukka/get-cmake@v3.31.6

      - name: Configure and Build
        if: ${{ matrix.buildtype == 'windows-release' }}
        uses: lukka/run-cmake@main
        with:
          configurePreset: ${{ matrix.buildtype }}
          buildPreset: ${{ matrix.buildtype }}

      - name: Prepare artifact folder
        shell: pwsh
        run: |
          $artifactDir = "$env:GITHUB_WORKSPACE\artifacts"
          New-Item -ItemType Directory -Force -Path $artifactDir | Out-Null

          $exePath = Get-ChildItem -Recurse -Path $env:GITHUB_WORKSPACE -Filter "otclient*.exe" | Select-Object -First 1

          if (-not $exePath) {
            Write-Error "Not found otclient*.exe!"
            exit 1
          }

          Copy-Item $exePath.FullName -Destination $artifactDir

          $dlls = Get-ChildItem -Path $exePath.Directory.FullName -Filter "*.dll"
          foreach ($dll in $dlls) {
            Copy-Item $dll.FullName -Destination $artifactDir
          }

      - name: Upload Executable Artifact (MSBuild)
        uses: actions/upload-artifact@v4
        with:
          name: otclient-${{ matrix.os }}-${{ matrix.buildtype }}
          path: |
            ${{ github.workspace }}/artifacts
