// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appearances.proto

#include "appearances.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace otclient {
namespace protobuf {
namespace appearances {

inline constexpr SpritePhase::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        duration_min_{0u},
        duration_max_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SpritePhase::SpritePhase(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SpritePhaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpritePhaseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpritePhaseDefaultTypeInternal() {}
  union {
    SpritePhase _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpritePhaseDefaultTypeInternal _SpritePhase_default_instance_;

inline constexpr SpecialMeaningAppearanceIds::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        gold_coin_id_{0u},
        platinum_coin_id_{0u},
        crystal_coin_id_{0u},
        tibia_coin_id_{0u},
        stamped_letter_id_{0u},
        supply_stash_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR SpecialMeaningAppearanceIds::SpecialMeaningAppearanceIds(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SpecialMeaningAppearanceIdsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpecialMeaningAppearanceIdsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpecialMeaningAppearanceIdsDefaultTypeInternal() {}
  union {
    SpecialMeaningAppearanceIds _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpecialMeaningAppearanceIdsDefaultTypeInternal _SpecialMeaningAppearanceIds_default_instance_;

inline constexpr Coordinate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0u},
        y_{0u},
        z_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Coordinate::Coordinate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CoordinateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CoordinateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CoordinateDefaultTypeInternal() {}
  union {
    Coordinate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CoordinateDefaultTypeInternal _Coordinate_default_instance_;

inline constexpr Box::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0u},
        y_{0u},
        width_{0u},
        height_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Box::Box(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BoxDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BoxDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BoxDefaultTypeInternal() {}
  union {
    Box _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BoxDefaultTypeInternal _Box_default_instance_;

inline constexpr AppearanceFlagWriteOnce::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        max_text_length_once_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagWriteOnce::AppearanceFlagWriteOnce(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagWriteOnceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagWriteOnceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagWriteOnceDefaultTypeInternal() {}
  union {
    AppearanceFlagWriteOnce _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagWriteOnceDefaultTypeInternal _AppearanceFlagWriteOnce_default_instance_;

inline constexpr AppearanceFlagWrite::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        max_text_length_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagWrite::AppearanceFlagWrite(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagWriteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagWriteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagWriteDefaultTypeInternal() {}
  union {
    AppearanceFlagWrite _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagWriteDefaultTypeInternal _AppearanceFlagWrite_default_instance_;

inline constexpr AppearanceFlagUpgradeClassification::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        upgrade_classification_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagUpgradeClassification::AppearanceFlagUpgradeClassification(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagUpgradeClassificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagUpgradeClassificationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagUpgradeClassificationDefaultTypeInternal() {}
  union {
    AppearanceFlagUpgradeClassification _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagUpgradeClassificationDefaultTypeInternal _AppearanceFlagUpgradeClassification_default_instance_;

inline constexpr AppearanceFlagShift::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0u},
        y_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagShift::AppearanceFlagShift(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagShiftDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagShiftDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagShiftDefaultTypeInternal() {}
  union {
    AppearanceFlagShift _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagShiftDefaultTypeInternal _AppearanceFlagShift_default_instance_;

inline constexpr AppearanceFlagNPC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_quest_flag_display_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sale_price_{0u},
        buy_price_{0u},
        currency_object_type_id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagNPC::AppearanceFlagNPC(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagNPCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagNPCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagNPCDefaultTypeInternal() {}
  union {
    AppearanceFlagNPC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagNPCDefaultTypeInternal _AppearanceFlagNPC_default_instance_;

inline constexpr AppearanceFlagMarket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        restrict_to_profession_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trade_as_object_id_{0u},
        show_as_object_id_{0u},
        minimum_level_{0u},
        category_{static_cast< ::otclient::protobuf::appearances::ITEM_CATEGORY >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagMarket::AppearanceFlagMarket(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagMarketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagMarketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagMarketDefaultTypeInternal() {}
  union {
    AppearanceFlagMarket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagMarketDefaultTypeInternal _AppearanceFlagMarket_default_instance_;

inline constexpr AppearanceFlagLight::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        brightness_{0u},
        color_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagLight::AppearanceFlagLight(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagLightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagLightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagLightDefaultTypeInternal() {}
  union {
    AppearanceFlagLight _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagLightDefaultTypeInternal _AppearanceFlagLight_default_instance_;

inline constexpr AppearanceFlagLenshelp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagLenshelp::AppearanceFlagLenshelp(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagLenshelpDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagLenshelpDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagLenshelpDefaultTypeInternal() {}
  union {
    AppearanceFlagLenshelp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagLenshelpDefaultTypeInternal _AppearanceFlagLenshelp_default_instance_;

inline constexpr AppearanceFlagHook::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        south_{static_cast< ::otclient::protobuf::appearances::HOOK_TYPE >(1)},
        east_{static_cast< ::otclient::protobuf::appearances::HOOK_TYPE >(1)} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagHook::AppearanceFlagHook(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagHookDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagHookDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagHookDefaultTypeInternal() {}
  union {
    AppearanceFlagHook _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagHookDefaultTypeInternal _AppearanceFlagHook_default_instance_;

inline constexpr AppearanceFlagHeight::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        elevation_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagHeight::AppearanceFlagHeight(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagHeightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagHeightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagHeightDefaultTypeInternal() {}
  union {
    AppearanceFlagHeight _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagHeightDefaultTypeInternal _AppearanceFlagHeight_default_instance_;

inline constexpr AppearanceFlagDefaultAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_{static_cast< ::otclient::protobuf::appearances::PLAYER_ACTION >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagDefaultAction::AppearanceFlagDefaultAction(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagDefaultActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagDefaultActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagDefaultActionDefaultTypeInternal() {}
  union {
    AppearanceFlagDefaultAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagDefaultActionDefaultTypeInternal _AppearanceFlagDefaultAction_default_instance_;

inline constexpr AppearanceFlagCyclopedia::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cyclopedia_type_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagCyclopedia::AppearanceFlagCyclopedia(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagCyclopediaDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagCyclopediaDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagCyclopediaDefaultTypeInternal() {}
  union {
    AppearanceFlagCyclopedia _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagCyclopediaDefaultTypeInternal _AppearanceFlagCyclopedia_default_instance_;

inline constexpr AppearanceFlagClothes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        slot_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagClothes::AppearanceFlagClothes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagClothesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagClothesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagClothesDefaultTypeInternal() {}
  union {
    AppearanceFlagClothes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagClothesDefaultTypeInternal _AppearanceFlagClothes_default_instance_;

inline constexpr AppearanceFlagChangedToExpire::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        former_object_typeid_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagChangedToExpire::AppearanceFlagChangedToExpire(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagChangedToExpireDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagChangedToExpireDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagChangedToExpireDefaultTypeInternal() {}
  union {
    AppearanceFlagChangedToExpire _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagChangedToExpireDefaultTypeInternal _AppearanceFlagChangedToExpire_default_instance_;

inline constexpr AppearanceFlagBank::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        waypoints_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagBank::AppearanceFlagBank(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagBankDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagBankDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagBankDefaultTypeInternal() {}
  union {
    AppearanceFlagBank _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagBankDefaultTypeInternal _AppearanceFlagBank_default_instance_;

inline constexpr AppearanceFlagAutomap::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        color_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlagAutomap::AppearanceFlagAutomap(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagAutomapDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagAutomapDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagAutomapDefaultTypeInternal() {}
  union {
    AppearanceFlagAutomap _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagAutomapDefaultTypeInternal _AppearanceFlagAutomap_default_instance_;

inline constexpr SpriteAnimation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sprite_phase_{},
        default_start_phase_{0u},
        synchronized_{false},
        random_start_phase_{false},
        loop_count_{0u},
        loop_type_{static_cast< ::otclient::protobuf::appearances::ANIMATION_LOOP_TYPE >(-1)} {}

template <typename>
PROTOBUF_CONSTEXPR SpriteAnimation::SpriteAnimation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SpriteAnimationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpriteAnimationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpriteAnimationDefaultTypeInternal() {}
  union {
    SpriteAnimation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpriteAnimationDefaultTypeInternal _SpriteAnimation_default_instance_;

inline constexpr AppearanceFlags::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        npcsaledata_{},
        bank_{nullptr},
        write_{nullptr},
        write_once_{nullptr},
        hook_{nullptr},
        light_{nullptr},
        shift_{nullptr},
        height_{nullptr},
        automap_{nullptr},
        lenshelp_{nullptr},
        clothes_{nullptr},
        default_action_{nullptr},
        market_{nullptr},
        changedtoexpire_{nullptr},
        cyclopediaitem_{nullptr},
        upgradeclassification_{nullptr},
        clip_{false},
        bottom_{false},
        top_{false},
        container_{false},
        cumulative_{false},
        usable_{false},
        forceuse_{false},
        multiuse_{false},
        liquidpool_{false},
        unpass_{false},
        unmove_{false},
        unsight_{false},
        avoid_{false},
        no_movement_animation_{false},
        take_{false},
        liquidcontainer_{false},
        hang_{false},
        rotate_{false},
        dont_hide_{false},
        translucent_{false},
        lying_object_{false},
        animate_always_{false},
        fullbank_{false},
        ignore_look_{false},
        wrap_{false},
        unwrap_{false},
        topeffect_{false},
        corpse_{false},
        player_corpse_{false},
        ammo_{false},
        show_off_socket_{false},
        reportable_{false},
        reverse_addons_east_{false},
        reverse_addons_west_{false},
        reverse_addons_south_{false},
        reverse_addons_north_{false},
        wearout_{false},
        clockexpire_{false},
        expire_{false},
        expirestop_{false},
        deco_kit_{false} {}

template <typename>
PROTOBUF_CONSTEXPR AppearanceFlags::AppearanceFlags(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceFlagsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceFlagsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceFlagsDefaultTypeInternal() {}
  union {
    AppearanceFlags _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceFlagsDefaultTypeInternal _AppearanceFlags_default_instance_;

inline constexpr SpriteInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sprite_id_{},
        bounding_box_per_direction_{},
        animation_{nullptr},
        pattern_width_{0u},
        pattern_height_{0u},
        pattern_depth_{0u},
        layers_{0u},
        bounding_square_{0u},
        is_opaque_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SpriteInfo::SpriteInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SpriteInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SpriteInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SpriteInfoDefaultTypeInternal() {}
  union {
    SpriteInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SpriteInfoDefaultTypeInternal _SpriteInfo_default_instance_;

inline constexpr FrameGroup::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        sprite_info_{nullptr},
        fixed_frame_group_{static_cast< ::otclient::protobuf::appearances::FIXED_FRAME_GROUP >(0)},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR FrameGroup::FrameGroup(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct FrameGroupDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrameGroupDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrameGroupDefaultTypeInternal() {}
  union {
    FrameGroup _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrameGroupDefaultTypeInternal _FrameGroup_default_instance_;

inline constexpr Appearance::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        frame_group_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        flags_{nullptr},
        id_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Appearance::Appearance(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearanceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearanceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearanceDefaultTypeInternal() {}
  union {
    Appearance _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearanceDefaultTypeInternal _Appearance_default_instance_;

inline constexpr Appearances::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        object_{},
        outfit_{},
        effect_{},
        missile_{},
        special_meaning_appearance_ids_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Appearances::Appearances(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct AppearancesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AppearancesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AppearancesDefaultTypeInternal() {}
  union {
    Appearances _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AppearancesDefaultTypeInternal _Appearances_default_instance_;
}  // namespace appearances
}  // namespace protobuf
}  // namespace otclient
static ::_pb::Metadata file_level_metadata_appearances_2eproto[26];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_appearances_2eproto[6];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_appearances_2eproto = nullptr;
const ::uint32_t TableStruct_appearances_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Coordinate, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Coordinate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Coordinate, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Coordinate, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Coordinate, _impl_.z_),
    0,
    1,
    2,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearances, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearances, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearances, _impl_.object_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearances, _impl_.outfit_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearances, _impl_.effect_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearances, _impl_.missile_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearances, _impl_.special_meaning_appearance_ids_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpritePhase, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpritePhase, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpritePhase, _impl_.duration_min_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpritePhase, _impl_.duration_max_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteAnimation, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteAnimation, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteAnimation, _impl_.default_start_phase_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteAnimation, _impl_.synchronized_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteAnimation, _impl_.random_start_phase_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteAnimation, _impl_.loop_type_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteAnimation, _impl_.loop_count_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteAnimation, _impl_.sprite_phase_),
    0,
    1,
    2,
    4,
    3,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Box, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Box, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Box, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Box, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Box, _impl_.width_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Box, _impl_.height_),
    0,
    1,
    2,
    3,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteInfo, _impl_.pattern_width_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteInfo, _impl_.pattern_height_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteInfo, _impl_.pattern_depth_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteInfo, _impl_.layers_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteInfo, _impl_.sprite_id_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteInfo, _impl_.bounding_square_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteInfo, _impl_.animation_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteInfo, _impl_.is_opaque_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpriteInfo, _impl_.bounding_box_per_direction_),
    1,
    2,
    3,
    4,
    ~0u,
    5,
    0,
    6,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::FrameGroup, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::FrameGroup, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::FrameGroup, _impl_.fixed_frame_group_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::FrameGroup, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::FrameGroup, _impl_.sprite_info_),
    1,
    2,
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearance, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearance, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearance, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearance, _impl_.frame_group_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearance, _impl_.flags_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearance, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::Appearance, _impl_.description_),
    3,
    ~0u,
    2,
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.bank_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.clip_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.bottom_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.top_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.container_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.cumulative_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.usable_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.forceuse_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.multiuse_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.write_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.write_once_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.liquidpool_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.unpass_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.unmove_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.unsight_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.avoid_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.no_movement_animation_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.take_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.liquidcontainer_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.hang_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.hook_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.rotate_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.light_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.dont_hide_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.translucent_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.shift_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.lying_object_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.animate_always_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.automap_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.lenshelp_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.fullbank_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.ignore_look_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.clothes_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.default_action_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.market_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.wrap_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.unwrap_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.topeffect_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.npcsaledata_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.changedtoexpire_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.corpse_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.player_corpse_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.cyclopediaitem_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.ammo_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.show_off_socket_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.reportable_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.upgradeclassification_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.reverse_addons_east_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.reverse_addons_west_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.reverse_addons_south_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.reverse_addons_north_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.wearout_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.clockexpire_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.expire_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.expirestop_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlags, _impl_.deco_kit_),
    0,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    1,
    2,
    23,
    24,
    25,
    26,
    27,
    28,
    29,
    30,
    31,
    3,
    32,
    4,
    33,
    34,
    5,
    6,
    35,
    36,
    7,
    8,
    37,
    38,
    9,
    10,
    11,
    39,
    40,
    41,
    ~0u,
    12,
    42,
    43,
    13,
    44,
    45,
    46,
    14,
    47,
    48,
    49,
    50,
    51,
    52,
    53,
    54,
    55,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagUpgradeClassification, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagUpgradeClassification, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagUpgradeClassification, _impl_.upgrade_classification_),
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagBank, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagBank, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagBank, _impl_.waypoints_),
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagWrite, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagWrite, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagWrite, _impl_.max_text_length_),
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagWriteOnce, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagWriteOnce, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagWriteOnce, _impl_.max_text_length_once_),
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagLight, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagLight, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagLight, _impl_.brightness_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagLight, _impl_.color_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagHeight, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagHeight, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagHeight, _impl_.elevation_),
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagShift, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagShift, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagShift, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagShift, _impl_.y_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagClothes, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagClothes, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagClothes, _impl_.slot_),
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagDefaultAction, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagDefaultAction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagDefaultAction, _impl_.action_),
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagMarket, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagMarket, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagMarket, _impl_.category_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagMarket, _impl_.trade_as_object_id_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagMarket, _impl_.show_as_object_id_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagMarket, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagMarket, _impl_.restrict_to_profession_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagMarket, _impl_.minimum_level_),
    4,
    1,
    2,
    0,
    ~0u,
    3,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagNPC, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagNPC, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagNPC, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagNPC, _impl_.location_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagNPC, _impl_.sale_price_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagNPC, _impl_.buy_price_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagNPC, _impl_.currency_object_type_id_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagNPC, _impl_.currency_quest_flag_display_name_),
    0,
    1,
    3,
    4,
    5,
    2,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagAutomap, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagAutomap, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagAutomap, _impl_.color_),
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagHook, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagHook, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagHook, _impl_.south_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagHook, _impl_.east_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagLenshelp, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagLenshelp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagLenshelp, _impl_.id_),
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagChangedToExpire, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagChangedToExpire, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagChangedToExpire, _impl_.former_object_typeid_),
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagCyclopedia, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagCyclopedia, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::AppearanceFlagCyclopedia, _impl_.cyclopedia_type_),
    0,
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpecialMeaningAppearanceIds, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.gold_coin_id_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.platinum_coin_id_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.crystal_coin_id_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.tibia_coin_id_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.stamped_letter_id_),
    PROTOBUF_FIELD_OFFSET(::otclient::protobuf::appearances::SpecialMeaningAppearanceIds, _impl_.supply_stash_id_),
    0,
    1,
    2,
    3,
    4,
    5,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 11, -1, sizeof(::otclient::protobuf::appearances::Coordinate)},
        {14, 27, -1, sizeof(::otclient::protobuf::appearances::Appearances)},
        {32, 42, -1, sizeof(::otclient::protobuf::appearances::SpritePhase)},
        {44, 58, -1, sizeof(::otclient::protobuf::appearances::SpriteAnimation)},
        {64, 76, -1, sizeof(::otclient::protobuf::appearances::Box)},
        {80, 97, -1, sizeof(::otclient::protobuf::appearances::SpriteInfo)},
        {106, 117, -1, sizeof(::otclient::protobuf::appearances::FrameGroup)},
        {120, 133, -1, sizeof(::otclient::protobuf::appearances::Appearance)},
        {138, 203, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlags)},
        {260, 269, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagUpgradeClassification)},
        {270, 279, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagBank)},
        {280, 289, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagWrite)},
        {290, 299, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagWriteOnce)},
        {300, 310, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagLight)},
        {312, 321, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagHeight)},
        {322, 332, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagShift)},
        {334, 343, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagClothes)},
        {344, 353, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagDefaultAction)},
        {354, 368, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagMarket)},
        {374, 388, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagNPC)},
        {394, 403, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagAutomap)},
        {404, 414, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagHook)},
        {416, 425, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagLenshelp)},
        {426, 435, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagChangedToExpire)},
        {436, 445, -1, sizeof(::otclient::protobuf::appearances::AppearanceFlagCyclopedia)},
        {446, 460, -1, sizeof(::otclient::protobuf::appearances::SpecialMeaningAppearanceIds)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::otclient::protobuf::appearances::_Coordinate_default_instance_._instance,
    &::otclient::protobuf::appearances::_Appearances_default_instance_._instance,
    &::otclient::protobuf::appearances::_SpritePhase_default_instance_._instance,
    &::otclient::protobuf::appearances::_SpriteAnimation_default_instance_._instance,
    &::otclient::protobuf::appearances::_Box_default_instance_._instance,
    &::otclient::protobuf::appearances::_SpriteInfo_default_instance_._instance,
    &::otclient::protobuf::appearances::_FrameGroup_default_instance_._instance,
    &::otclient::protobuf::appearances::_Appearance_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlags_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagUpgradeClassification_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagBank_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagWrite_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagWriteOnce_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagLight_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagHeight_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagShift_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagClothes_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagDefaultAction_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagMarket_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagNPC_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagAutomap_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagHook_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagLenshelp_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagChangedToExpire_default_instance_._instance,
    &::otclient::protobuf::appearances::_AppearanceFlagCyclopedia_default_instance_._instance,
    &::otclient::protobuf::appearances::_SpecialMeaningAppearanceIds_default_instance_._instance,
};
const char descriptor_table_protodef_appearances_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\021appearances.proto\022\035otclient.protobuf.a"
    "ppearances\"-\n\nCoordinate\022\t\n\001x\030\001 \001(\r\022\t\n\001y"
    "\030\002 \001(\r\022\t\n\001z\030\003 \001(\r\"\336\002\n\013Appearances\0229\n\006obj"
    "ect\030\001 \003(\0132).otclient.protobuf.appearance"
    "s.Appearance\0229\n\006outfit\030\002 \003(\0132).otclient."
    "protobuf.appearances.Appearance\0229\n\006effec"
    "t\030\003 \003(\0132).otclient.protobuf.appearances."
    "Appearance\022:\n\007missile\030\004 \003(\0132).otclient.p"
    "rotobuf.appearances.Appearance\022b\n\036specia"
    "l_meaning_appearance_ids\030\005 \001(\0132:.otclien"
    "t.protobuf.appearances.SpecialMeaningApp"
    "earanceIds\"9\n\013SpritePhase\022\024\n\014duration_mi"
    "n\030\001 \001(\r\022\024\n\014duration_max\030\002 \001(\r\"\375\001\n\017Sprite"
    "Animation\022\033\n\023default_start_phase\030\001 \001(\r\022\024"
    "\n\014synchronized\030\002 \001(\010\022\032\n\022random_start_pha"
    "se\030\003 \001(\010\022E\n\tloop_type\030\004 \001(\01622.otclient.p"
    "rotobuf.appearances.ANIMATION_LOOP_TYPE\022"
    "\022\n\nloop_count\030\005 \001(\r\022@\n\014sprite_phase\030\006 \003("
    "\0132*.otclient.protobuf.appearances.Sprite"
    "Phase\":\n\003Box\022\t\n\001x\030\001 \001(\r\022\t\n\001y\030\002 \001(\r\022\r\n\005wi"
    "dth\030\003 \001(\r\022\016\n\006height\030\004 \001(\r\"\254\002\n\nSpriteInfo"
    "\022\025\n\rpattern_width\030\001 \001(\r\022\026\n\016pattern_heigh"
    "t\030\002 \001(\r\022\025\n\rpattern_depth\030\003 \001(\r\022\016\n\006layers"
    "\030\004 \001(\r\022\021\n\tsprite_id\030\005 \003(\r\022\027\n\017bounding_sq"
    "uare\030\007 \001(\r\022A\n\tanimation\030\006 \001(\0132..otclient"
    ".protobuf.appearances.SpriteAnimation\022\021\n"
    "\tis_opaque\030\010 \001(\010\022F\n\032bounding_box_per_dir"
    "ection\030\t \003(\0132\".otclient.protobuf.appeara"
    "nces.Box\"\245\001\n\nFrameGroup\022K\n\021fixed_frame_g"
    "roup\030\001 \001(\01620.otclient.protobuf.appearanc"
    "es.FIXED_FRAME_GROUP\022\n\n\002id\030\002 \001(\r\022>\n\013spri"
    "te_info\030\003 \001(\0132).otclient.protobuf.appear"
    "ances.SpriteInfo\"\272\001\n\nAppearance\022\n\n\002id\030\001 "
    "\001(\r\022>\n\013frame_group\030\002 \003(\0132).otclient.prot"
    "obuf.appearances.FrameGroup\022=\n\005flags\030\003 \001"
    "(\0132..otclient.protobuf.appearances.Appea"
    "ranceFlags\022\014\n\004name\030\004 \001(\t\022\023\n\013description\030"
    "\005 \001(\t\"\317\017\n\017AppearanceFlags\022\?\n\004bank\030\001 \001(\0132"
    "1.otclient.protobuf.appearances.Appearan"
    "ceFlagBank\022\014\n\004clip\030\002 \001(\010\022\016\n\006bottom\030\003 \001(\010"
    "\022\013\n\003top\030\004 \001(\010\022\021\n\tcontainer\030\005 \001(\010\022\022\n\ncumu"
    "lative\030\006 \001(\010\022\016\n\006usable\030\007 \001(\010\022\020\n\010forceuse"
    "\030\010 \001(\010\022\020\n\010multiuse\030\t \001(\010\022A\n\005write\030\n \001(\0132"
    "2.otclient.protobuf.appearances.Appearan"
    "ceFlagWrite\022J\n\nwrite_once\030\013 \001(\01326.otclie"
    "nt.protobuf.appearances.AppearanceFlagWr"
    "iteOnce\022\022\n\nliquidpool\030\014 \001(\010\022\016\n\006unpass\030\r "
    "\001(\010\022\016\n\006unmove\030\016 \001(\010\022\017\n\007unsight\030\017 \001(\010\022\r\n\005"
    "avoid\030\020 \001(\010\022\035\n\025no_movement_animation\030\021 \001"
    "(\010\022\014\n\004take\030\022 \001(\010\022\027\n\017liquidcontainer\030\023 \001("
    "\010\022\014\n\004hang\030\024 \001(\010\022\?\n\004hook\030\025 \001(\01321.otclient"
    ".protobuf.appearances.AppearanceFlagHook"
    "\022\016\n\006rotate\030\026 \001(\010\022A\n\005light\030\027 \001(\01322.otclie"
    "nt.protobuf.appearances.AppearanceFlagLi"
    "ght\022\021\n\tdont_hide\030\030 \001(\010\022\023\n\013translucent\030\031 "
    "\001(\010\022A\n\005shift\030\032 \001(\01322.otclient.protobuf.a"
    "ppearances.AppearanceFlagShift\022C\n\006height"
    "\030\033 \001(\01323.otclient.protobuf.appearances.A"
    "ppearanceFlagHeight\022\024\n\014lying_object\030\034 \001("
    "\010\022\026\n\016animate_always\030\035 \001(\010\022E\n\007automap\030\036 \001"
    "(\01324.otclient.protobuf.appearances.Appea"
    "ranceFlagAutomap\022G\n\010lenshelp\030\037 \001(\01325.otc"
    "lient.protobuf.appearances.AppearanceFla"
    "gLenshelp\022\020\n\010fullbank\030  \001(\010\022\023\n\013ignore_lo"
    "ok\030! \001(\010\022E\n\007clothes\030\" \001(\01324.otclient.pro"
    "tobuf.appearances.AppearanceFlagClothes\022"
    "R\n\016default_action\030# \001(\0132:.otclient.proto"
    "buf.appearances.AppearanceFlagDefaultAct"
    "ion\022C\n\006market\030$ \001(\01323.otclient.protobuf."
    "appearances.AppearanceFlagMarket\022\014\n\004wrap"
    "\030% \001(\010\022\016\n\006unwrap\030& \001(\010\022\021\n\ttopeffect\030\' \001("
    "\010\022E\n\013npcsaledata\030( \003(\01320.otclient.protob"
    "uf.appearances.AppearanceFlagNPC\022U\n\017chan"
    "gedtoexpire\030) \001(\0132<.otclient.protobuf.ap"
    "pearances.AppearanceFlagChangedToExpire\022"
    "\016\n\006corpse\030* \001(\010\022\025\n\rplayer_corpse\030+ \001(\010\022O"
    "\n\016cyclopediaitem\030, \001(\01327.otclient.protob"
    "uf.appearances.AppearanceFlagCyclopedia\022"
    "\014\n\004ammo\030- \001(\010\022\027\n\017show_off_socket\030. \001(\010\022\022"
    "\n\nreportable\030/ \001(\010\022a\n\025upgradeclassificat"
    "ion\0300 \001(\0132B.otclient.protobuf.appearance"
    "s.AppearanceFlagUpgradeClassification\022\033\n"
    "\023reverse_addons_east\0301 \001(\010\022\033\n\023reverse_ad"
    "dons_west\0302 \001(\010\022\034\n\024reverse_addons_south\030"
    "3 \001(\010\022\034\n\024reverse_addons_north\0304 \001(\010\022\017\n\007w"
    "earout\0305 \001(\010\022\023\n\013clockexpire\0306 \001(\010\022\016\n\006exp"
    "ire\0307 \001(\010\022\022\n\nexpirestop\0308 \001(\010\022\020\n\010deco_ki"
    "t\0309 \001(\010\"E\n#AppearanceFlagUpgradeClassifi"
    "cation\022\036\n\026upgrade_classification\030\001 \001(\r\"\'"
    "\n\022AppearanceFlagBank\022\021\n\twaypoints\030\001 \001(\r\""
    ".\n\023AppearanceFlagWrite\022\027\n\017max_text_lengt"
    "h\030\001 \001(\r\"7\n\027AppearanceFlagWriteOnce\022\034\n\024ma"
    "x_text_length_once\030\001 \001(\r\"8\n\023AppearanceFl"
    "agLight\022\022\n\nbrightness\030\001 \001(\r\022\r\n\005color\030\002 \001"
    "(\r\")\n\024AppearanceFlagHeight\022\021\n\televation\030"
    "\001 \001(\r\"+\n\023AppearanceFlagShift\022\t\n\001x\030\001 \001(\r\022"
    "\t\n\001y\030\002 \001(\r\"%\n\025AppearanceFlagClothes\022\014\n\004s"
    "lot\030\001 \001(\r\"[\n\033AppearanceFlagDefaultAction"
    "\022<\n\006action\030\001 \001(\0162,.otclient.protobuf.app"
    "earances.PLAYER_ACTION\"\204\002\n\024AppearanceFla"
    "gMarket\022>\n\010category\030\001 \001(\0162,.otclient.pro"
    "tobuf.appearances.ITEM_CATEGORY\022\032\n\022trade"
    "_as_object_id\030\002 \001(\r\022\031\n\021show_as_object_id"
    "\030\003 \001(\r\022\014\n\004name\030\004 \001(\t\022P\n\026restrict_to_prof"
    "ession\030\005 \003(\01620.otclient.protobuf.appeara"
    "nces.PLAYER_PROFESSION\022\025\n\rminimum_level\030"
    "\006 \001(\r\"\245\001\n\021AppearanceFlagNPC\022\014\n\004name\030\001 \001("
    "\t\022\020\n\010location\030\002 \001(\t\022\022\n\nsale_price\030\003 \001(\r\022"
    "\021\n\tbuy_price\030\004 \001(\r\022\037\n\027currency_object_ty"
    "pe_id\030\005 \001(\r\022(\n currency_quest_flag_displ"
    "ay_name\030\006 \001(\t\"&\n\025AppearanceFlagAutomap\022\r"
    "\n\005color\030\001 \001(\r\"\205\001\n\022AppearanceFlagHook\0227\n\005"
    "south\030\001 \001(\0162(.otclient.protobuf.appearan"
    "ces.HOOK_TYPE\0226\n\004east\030\002 \001(\0162(.otclient.p"
    "rotobuf.appearances.HOOK_TYPE\"$\n\026Appeara"
    "nceFlagLenshelp\022\n\n\002id\030\001 \001(\r\"=\n\035Appearanc"
    "eFlagChangedToExpire\022\034\n\024former_object_ty"
    "peid\030\001 \001(\r\"3\n\030AppearanceFlagCyclopedia\022\027"
    "\n\017cyclopedia_type\030\001 \001(\r\"\261\001\n\033SpecialMeani"
    "ngAppearanceIds\022\024\n\014gold_coin_id\030\001 \001(\r\022\030\n"
    "\020platinum_coin_id\030\002 \001(\r\022\027\n\017crystal_coin_"
    "id\030\003 \001(\r\022\025\n\rtibia_coin_id\030\004 \001(\r\022\031\n\021stamp"
    "ed_letter_id\030\005 \001(\r\022\027\n\017supply_stash_id\030\006 "
    "\001(\r*\224\001\n\rPLAYER_ACTION\022\026\n\022PLAYER_ACTION_N"
    "ONE\020\000\022\026\n\022PLAYER_ACTION_LOOK\020\001\022\025\n\021PLAYER_"
    "ACTION_USE\020\002\022\026\n\022PLAYER_ACTION_OPEN\020\003\022$\n "
    "PLAYER_ACTION_AUTOWALK_HIGHLIGHT\020\004*\263\005\n\rI"
    "TEM_CATEGORY\022\030\n\024ITEM_CATEGORY_ARMORS\020\001\022\031"
    "\n\025ITEM_CATEGORY_AMULETS\020\002\022\027\n\023ITEM_CATEGO"
    "RY_BOOTS\020\003\022\034\n\030ITEM_CATEGORY_CONTAINERS\020\004"
    "\022\034\n\030ITEM_CATEGORY_DECORATION\020\005\022\026\n\022ITEM_C"
    "ATEGORY_FOOD\020\006\022\036\n\032ITEM_CATEGORY_HELMETS_"
    "HATS\020\007\022\026\n\022ITEM_CATEGORY_LEGS\020\010\022\030\n\024ITEM_C"
    "ATEGORY_OTHERS\020\t\022\031\n\025ITEM_CATEGORY_POTION"
    "S\020\n\022\027\n\023ITEM_CATEGORY_RINGS\020\013\022\027\n\023ITEM_CAT"
    "EGORY_RUNES\020\014\022\031\n\025ITEM_CATEGORY_SHIELDS\020\r"
    "\022\027\n\023ITEM_CATEGORY_TOOLS\020\016\022\033\n\027ITEM_CATEGO"
    "RY_VALUABLES\020\017\022\034\n\030ITEM_CATEGORY_AMMUNITI"
    "ON\020\020\022\026\n\022ITEM_CATEGORY_AXES\020\021\022\027\n\023ITEM_CAT"
    "EGORY_CLUBS\020\022\022\"\n\036ITEM_CATEGORY_DISTANCE_"
    "WEAPONS\020\023\022\030\n\024ITEM_CATEGORY_SWORDS\020\024\022\034\n\030I"
    "TEM_CATEGORY_WANDS_RODS\020\025\022!\n\035ITEM_CATEGO"
    "RY_PREMIUM_SCROLLS\020\026\022\035\n\031ITEM_CATEGORY_TI"
    "BIA_COINS\020\027\022#\n\037ITEM_CATEGORY_CREATURE_PR"
    "ODUCTS\020\030*\355\001\n\021PLAYER_PROFESSION\022\"\n\025PLAYER"
    "_PROFESSION_ANY\020\377\377\377\377\377\377\377\377\377\001\022\032\n\026PLAYER_PRO"
    "FESSION_NONE\020\000\022\034\n\030PLAYER_PROFESSION_KNIG"
    "HT\020\001\022\035\n\031PLAYER_PROFESSION_PALADIN\020\002\022\036\n\032P"
    "LAYER_PROFESSION_SORCERER\020\003\022\033\n\027PLAYER_PR"
    "OFESSION_DRUID\020\004\022\036\n\032PLAYER_PROFESSION_PR"
    "OMOTED\020\n*\203\001\n\023ANIMATION_LOOP_TYPE\022)\n\034ANIM"
    "ATION_LOOP_TYPE_PINGPONG\020\377\377\377\377\377\377\377\377\377\001\022 \n\034A"
    "NIMATION_LOOP_TYPE_INFINITE\020\000\022\037\n\033ANIMATI"
    "ON_LOOP_TYPE_COUNTED\020\001*4\n\tHOOK_TYPE\022\023\n\017H"
    "OOK_TYPE_SOUTH\020\001\022\022\n\016HOOK_TYPE_EAST\020\002*\201\001\n"
    "\021FIXED_FRAME_GROUP\022!\n\035FIXED_FRAME_GROUP_"
    "OUTFIT_IDLE\020\000\022#\n\037FIXED_FRAME_GROUP_OUTFI"
    "T_MOVING\020\001\022$\n FIXED_FRAME_GROUP_OBJECT_I"
    "NITIAL\020\002"
};
static ::absl::once_flag descriptor_table_appearances_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_appearances_2eproto = {
    false,
    false,
    6328,
    descriptor_table_protodef_appearances_2eproto,
    "appearances.proto",
    &descriptor_table_appearances_2eproto_once,
    nullptr,
    0,
    26,
    schemas,
    file_default_instances,
    TableStruct_appearances_2eproto::offsets,
    file_level_metadata_appearances_2eproto,
    file_level_enum_descriptors_appearances_2eproto,
    file_level_service_descriptors_appearances_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_appearances_2eproto_getter() {
  return &descriptor_table_appearances_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_appearances_2eproto(&descriptor_table_appearances_2eproto);
namespace otclient {
namespace protobuf {
namespace appearances {
const ::google::protobuf::EnumDescriptor* PLAYER_ACTION_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PLAYER_ACTION_internal_data_[] = {
    327680u, 0u, };
bool PLAYER_ACTION_IsValid(int value) {
  return 0 <= value && value <= 4;
}
const ::google::protobuf::EnumDescriptor* ITEM_CATEGORY_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t ITEM_CATEGORY_internal_data_[] = {
    1572865u, 0u, };
bool ITEM_CATEGORY_IsValid(int value) {
  return 1 <= value && value <= 24;
}
const ::google::protobuf::EnumDescriptor* PLAYER_PROFESSION_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t PLAYER_PROFESSION_internal_data_[] = {
    458751u, 32u, 32u, };
bool PLAYER_PROFESSION_IsValid(int value) {
  return ::_pbi::ValidateEnum(value, PLAYER_PROFESSION_internal_data_);
}
const ::google::protobuf::EnumDescriptor* ANIMATION_LOOP_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t ANIMATION_LOOP_TYPE_internal_data_[] = {
    262143u, 0u, };
bool ANIMATION_LOOP_TYPE_IsValid(int value) {
  return -1 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* HOOK_TYPE_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t HOOK_TYPE_internal_data_[] = {
    131073u, 0u, };
bool HOOK_TYPE_IsValid(int value) {
  return 1 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* FIXED_FRAME_GROUP_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_appearances_2eproto);
  return file_level_enum_descriptors_appearances_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t FIXED_FRAME_GROUP_internal_data_[] = {
    196608u, 0u, };
bool FIXED_FRAME_GROUP_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class Coordinate::_Internal {
 public:
  using HasBits = decltype(std::declval<Coordinate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Coordinate, _impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

Coordinate::Coordinate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.Coordinate)
}
Coordinate::Coordinate(
    ::google::protobuf::Arena* arena, const Coordinate& from)
    : Coordinate(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Coordinate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Coordinate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, z_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::z_));
}
Coordinate::~Coordinate() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.Coordinate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Coordinate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Coordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.Coordinate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.z_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Coordinate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Coordinate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Coordinate, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Coordinate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Coordinate, _impl_.x_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.x_)}},
    // optional uint32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Coordinate, _impl_.y_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.y_)}},
    // optional uint32 z = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Coordinate, _impl_.z_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 x = 1;
    {PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 y = 2;
    {PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 z = 3;
    {PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Coordinate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.Coordinate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_x(), target);
  }

  // optional uint32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_y(), target);
  }

  // optional uint32 z = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_z(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.Coordinate)
  return target;
}

::size_t Coordinate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.Coordinate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional uint32 x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_x());
    }

    // optional uint32 y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_y());
    }

    // optional uint32 z = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_z());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Coordinate::_class_data_ = {
    Coordinate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Coordinate::GetClassData() const {
  return &_class_data_;
}

void Coordinate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Coordinate*>(&to_msg);
  auto& from = static_cast<const Coordinate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.Coordinate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Coordinate::CopyFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Coordinate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Coordinate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Coordinate::InternalSwap(Coordinate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.z_)
      + sizeof(Coordinate::_impl_.z_)
      - PROTOBUF_FIELD_OFFSET(Coordinate, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Coordinate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[0]);
}
// ===================================================================

class Appearances::_Internal {
 public:
  using HasBits = decltype(std::declval<Appearances>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Appearances, _impl_._has_bits_);
  static const ::otclient::protobuf::appearances::SpecialMeaningAppearanceIds& special_meaning_appearance_ids(const Appearances* msg);
  static void set_has_special_meaning_appearance_ids(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::otclient::protobuf::appearances::SpecialMeaningAppearanceIds& Appearances::_Internal::special_meaning_appearance_ids(const Appearances* msg) {
  return *msg->_impl_.special_meaning_appearance_ids_;
}
Appearances::Appearances(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.Appearances)
}
inline PROTOBUF_NDEBUG_INLINE Appearances::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        object_{visibility, arena, from.object_},
        outfit_{visibility, arena, from.outfit_},
        effect_{visibility, arena, from.effect_},
        missile_{visibility, arena, from.missile_} {}

Appearances::Appearances(
    ::google::protobuf::Arena* arena,
    const Appearances& from)
    : ::google::protobuf::Message(arena) {
  Appearances* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.special_meaning_appearance_ids_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::SpecialMeaningAppearanceIds>(arena, *from._impl_.special_meaning_appearance_ids_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:otclient.protobuf.appearances.Appearances)
}
inline PROTOBUF_NDEBUG_INLINE Appearances::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        object_{visibility, arena},
        outfit_{visibility, arena},
        effect_{visibility, arena},
        missile_{visibility, arena} {}

inline void Appearances::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.special_meaning_appearance_ids_ = {};
}
Appearances::~Appearances() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.Appearances)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Appearances::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.special_meaning_appearance_ids_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Appearances::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.Appearances)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.object_.Clear();
  _impl_.outfit_.Clear();
  _impl_.effect_.Clear();
  _impl_.missile_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.special_meaning_appearance_ids_ != nullptr);
    _impl_.special_meaning_appearance_ids_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Appearances::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 5, 0, 2> Appearances::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Appearances, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Appearances_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .otclient.protobuf.appearances.Appearance object = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Appearances, _impl_.object_)}},
    // repeated .otclient.protobuf.appearances.Appearance outfit = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(Appearances, _impl_.outfit_)}},
    // repeated .otclient.protobuf.appearances.Appearance effect = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(Appearances, _impl_.effect_)}},
    // repeated .otclient.protobuf.appearances.Appearance missile = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 3, PROTOBUF_FIELD_OFFSET(Appearances, _impl_.missile_)}},
    // optional .otclient.protobuf.appearances.SpecialMeaningAppearanceIds special_meaning_appearance_ids = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 4, PROTOBUF_FIELD_OFFSET(Appearances, _impl_.special_meaning_appearance_ids_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .otclient.protobuf.appearances.Appearance object = 1;
    {PROTOBUF_FIELD_OFFSET(Appearances, _impl_.object_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .otclient.protobuf.appearances.Appearance outfit = 2;
    {PROTOBUF_FIELD_OFFSET(Appearances, _impl_.outfit_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .otclient.protobuf.appearances.Appearance effect = 3;
    {PROTOBUF_FIELD_OFFSET(Appearances, _impl_.effect_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .otclient.protobuf.appearances.Appearance missile = 4;
    {PROTOBUF_FIELD_OFFSET(Appearances, _impl_.missile_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .otclient.protobuf.appearances.SpecialMeaningAppearanceIds special_meaning_appearance_ids = 5;
    {PROTOBUF_FIELD_OFFSET(Appearances, _impl_.special_meaning_appearance_ids_), _Internal::kHasBitsOffset + 0, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::Appearance>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::Appearance>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::Appearance>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::Appearance>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::SpecialMeaningAppearanceIds>()},
  }}, {{
  }},
};

::uint8_t* Appearances::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.Appearances)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .otclient.protobuf.appearances.Appearance object = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_object_size()); i < n; i++) {
    const auto& repfield = this->_internal_object().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .otclient.protobuf.appearances.Appearance outfit = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_outfit_size()); i < n; i++) {
    const auto& repfield = this->_internal_outfit().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .otclient.protobuf.appearances.Appearance effect = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_effect_size()); i < n; i++) {
    const auto& repfield = this->_internal_effect().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .otclient.protobuf.appearances.Appearance missile = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_missile_size()); i < n; i++) {
    const auto& repfield = this->_internal_missile().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.SpecialMeaningAppearanceIds special_meaning_appearance_ids = 5;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, _Internal::special_meaning_appearance_ids(this),
        _Internal::special_meaning_appearance_ids(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.Appearances)
  return target;
}

::size_t Appearances::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.Appearances)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .otclient.protobuf.appearances.Appearance object = 1;
  total_size += 1UL * this->_internal_object_size();
  for (const auto& msg : this->_internal_object()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .otclient.protobuf.appearances.Appearance outfit = 2;
  total_size += 1UL * this->_internal_outfit_size();
  for (const auto& msg : this->_internal_outfit()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .otclient.protobuf.appearances.Appearance effect = 3;
  total_size += 1UL * this->_internal_effect_size();
  for (const auto& msg : this->_internal_effect()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .otclient.protobuf.appearances.Appearance missile = 4;
  total_size += 1UL * this->_internal_missile_size();
  for (const auto& msg : this->_internal_missile()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // optional .otclient.protobuf.appearances.SpecialMeaningAppearanceIds special_meaning_appearance_ids = 5;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.special_meaning_appearance_ids_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Appearances::_class_data_ = {
    Appearances::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Appearances::GetClassData() const {
  return &_class_data_;
}

void Appearances::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Appearances*>(&to_msg);
  auto& from = static_cast<const Appearances&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.Appearances)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_object()->MergeFrom(
      from._internal_object());
  _this->_internal_mutable_outfit()->MergeFrom(
      from._internal_outfit());
  _this->_internal_mutable_effect()->MergeFrom(
      from._internal_effect());
  _this->_internal_mutable_missile()->MergeFrom(
      from._internal_missile());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_special_meaning_appearance_ids()->::otclient::protobuf::appearances::SpecialMeaningAppearanceIds::MergeFrom(
        from._internal_special_meaning_appearance_ids());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Appearances::CopyFrom(const Appearances& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.Appearances)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Appearances::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Appearances::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Appearances::InternalSwap(Appearances* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.object_.InternalSwap(&other->_impl_.object_);
  _impl_.outfit_.InternalSwap(&other->_impl_.outfit_);
  _impl_.effect_.InternalSwap(&other->_impl_.effect_);
  _impl_.missile_.InternalSwap(&other->_impl_.missile_);
  swap(_impl_.special_meaning_appearance_ids_, other->_impl_.special_meaning_appearance_ids_);
}

::google::protobuf::Metadata Appearances::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[1]);
}
// ===================================================================

class SpritePhase::_Internal {
 public:
  using HasBits = decltype(std::declval<SpritePhase>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_._has_bits_);
  static void set_has_duration_min(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_duration_max(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

SpritePhase::SpritePhase(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.SpritePhase)
}
SpritePhase::SpritePhase(
    ::google::protobuf::Arena* arena, const SpritePhase& from)
    : SpritePhase(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SpritePhase::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SpritePhase::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_min_),
           0,
           offsetof(Impl_, duration_max_) -
               offsetof(Impl_, duration_min_) +
               sizeof(Impl_::duration_max_));
}
SpritePhase::~SpritePhase() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.SpritePhase)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SpritePhase::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SpritePhase::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.SpritePhase)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.duration_min_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.duration_max_) -
        reinterpret_cast<char*>(&_impl_.duration_min_)) + sizeof(_impl_.duration_max_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SpritePhase::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> SpritePhase::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SpritePhase_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 duration_max = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpritePhase, _impl_.duration_max_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_max_)}},
    // optional uint32 duration_min = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpritePhase, _impl_.duration_min_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_min_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 duration_min = 1;
    {PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_min_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 duration_max = 2;
    {PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_max_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SpritePhase::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.SpritePhase)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 duration_min = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_duration_min(), target);
  }

  // optional uint32 duration_max = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_duration_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.SpritePhase)
  return target;
}

::size_t SpritePhase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.SpritePhase)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 duration_min = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_duration_min());
    }

    // optional uint32 duration_max = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_duration_max());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SpritePhase::_class_data_ = {
    SpritePhase::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SpritePhase::GetClassData() const {
  return &_class_data_;
}

void SpritePhase::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SpritePhase*>(&to_msg);
  auto& from = static_cast<const SpritePhase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.SpritePhase)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.duration_min_ = from._impl_.duration_min_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.duration_max_ = from._impl_.duration_max_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpritePhase::CopyFrom(const SpritePhase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.SpritePhase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SpritePhase::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SpritePhase::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SpritePhase::InternalSwap(SpritePhase* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_max_)
      + sizeof(SpritePhase::_impl_.duration_max_)
      - PROTOBUF_FIELD_OFFSET(SpritePhase, _impl_.duration_min_)>(
          reinterpret_cast<char*>(&_impl_.duration_min_),
          reinterpret_cast<char*>(&other->_impl_.duration_min_));
}

::google::protobuf::Metadata SpritePhase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[2]);
}
// ===================================================================

class SpriteAnimation::_Internal {
 public:
  using HasBits = decltype(std::declval<SpriteAnimation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_._has_bits_);
  static void set_has_default_start_phase(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_synchronized(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_random_start_phase(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_loop_type(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_loop_count(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

SpriteAnimation::SpriteAnimation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.SpriteAnimation)
}
inline PROTOBUF_NDEBUG_INLINE SpriteAnimation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sprite_phase_{visibility, arena, from.sprite_phase_} {}

SpriteAnimation::SpriteAnimation(
    ::google::protobuf::Arena* arena,
    const SpriteAnimation& from)
    : ::google::protobuf::Message(arena) {
  SpriteAnimation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, default_start_phase_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, default_start_phase_),
           offsetof(Impl_, loop_type_) -
               offsetof(Impl_, default_start_phase_) +
               sizeof(Impl_::loop_type_));

  // @@protoc_insertion_point(copy_constructor:otclient.protobuf.appearances.SpriteAnimation)
}
inline PROTOBUF_NDEBUG_INLINE SpriteAnimation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sprite_phase_{visibility, arena},
        loop_type_{static_cast< ::otclient::protobuf::appearances::ANIMATION_LOOP_TYPE >(-1)} {}

inline void SpriteAnimation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, default_start_phase_),
           0,
           offsetof(Impl_, loop_count_) -
               offsetof(Impl_, default_start_phase_) +
               sizeof(Impl_::loop_count_));
}
SpriteAnimation::~SpriteAnimation() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.SpriteAnimation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SpriteAnimation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SpriteAnimation::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.SpriteAnimation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sprite_phase_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.default_start_phase_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.loop_count_) -
        reinterpret_cast<char*>(&_impl_.default_start_phase_)) + sizeof(_impl_.loop_count_));
    _impl_.loop_type_ = -1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SpriteAnimation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 0, 2> SpriteAnimation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SpriteAnimation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 default_start_phase = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteAnimation, _impl_.default_start_phase_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.default_start_phase_)}},
    // optional bool synchronized = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SpriteAnimation, _impl_.synchronized_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.synchronized_)}},
    // optional bool random_start_phase = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SpriteAnimation, _impl_.random_start_phase_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.random_start_phase_)}},
    // optional .otclient.protobuf.appearances.ANIMATION_LOOP_TYPE loop_type = 4;
    {::_pbi::TcParser::FastErS1,
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.loop_type_)}},
    // optional uint32 loop_count = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteAnimation, _impl_.loop_count_), 3>(),
     {40, 3, 0, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.loop_count_)}},
    // repeated .otclient.protobuf.appearances.SpritePhase sprite_phase = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 1, PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.sprite_phase_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 default_start_phase = 1;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.default_start_phase_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool synchronized = 2;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.synchronized_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool random_start_phase = 3;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.random_start_phase_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .otclient.protobuf.appearances.ANIMATION_LOOP_TYPE loop_type = 4;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.loop_type_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 loop_count = 5;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.loop_count_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .otclient.protobuf.appearances.SpritePhase sprite_phase = 6;
    {PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.sprite_phase_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {-1, 3},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::SpritePhase>()},
  }}, {{
  }},
};

::uint8_t* SpriteAnimation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.SpriteAnimation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 default_start_phase = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_default_start_phase(), target);
  }

  // optional bool synchronized = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_synchronized(), target);
  }

  // optional bool random_start_phase = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_random_start_phase(), target);
  }

  // optional .otclient.protobuf.appearances.ANIMATION_LOOP_TYPE loop_type = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_loop_type(), target);
  }

  // optional uint32 loop_count = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_loop_count(), target);
  }

  // repeated .otclient.protobuf.appearances.SpritePhase sprite_phase = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_sprite_phase_size()); i < n; i++) {
    const auto& repfield = this->_internal_sprite_phase().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.SpriteAnimation)
  return target;
}

::size_t SpriteAnimation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.SpriteAnimation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .otclient.protobuf.appearances.SpritePhase sprite_phase = 6;
  total_size += 1UL * this->_internal_sprite_phase_size();
  for (const auto& msg : this->_internal_sprite_phase()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional uint32 default_start_phase = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_default_start_phase());
    }

    // optional bool synchronized = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2;
    }

    // optional bool random_start_phase = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2;
    }

    // optional uint32 loop_count = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_loop_count());
    }

    // optional .otclient.protobuf.appearances.ANIMATION_LOOP_TYPE loop_type = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_loop_type());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SpriteAnimation::_class_data_ = {
    SpriteAnimation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SpriteAnimation::GetClassData() const {
  return &_class_data_;
}

void SpriteAnimation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SpriteAnimation*>(&to_msg);
  auto& from = static_cast<const SpriteAnimation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.SpriteAnimation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sprite_phase()->MergeFrom(
      from._internal_sprite_phase());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.default_start_phase_ = from._impl_.default_start_phase_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.synchronized_ = from._impl_.synchronized_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.random_start_phase_ = from._impl_.random_start_phase_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.loop_count_ = from._impl_.loop_count_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.loop_type_ = from._impl_.loop_type_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpriteAnimation::CopyFrom(const SpriteAnimation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.SpriteAnimation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SpriteAnimation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SpriteAnimation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SpriteAnimation::InternalSwap(SpriteAnimation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sprite_phase_.InternalSwap(&other->_impl_.sprite_phase_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.loop_type_)
      + sizeof(SpriteAnimation::_impl_.loop_type_)
      - PROTOBUF_FIELD_OFFSET(SpriteAnimation, _impl_.default_start_phase_)>(
          reinterpret_cast<char*>(&_impl_.default_start_phase_),
          reinterpret_cast<char*>(&other->_impl_.default_start_phase_));
}

::google::protobuf::Metadata SpriteAnimation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[3]);
}
// ===================================================================

class Box::_Internal {
 public:
  using HasBits = decltype(std::declval<Box>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Box, _impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_width(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Box::Box(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.Box)
}
Box::Box(
    ::google::protobuf::Arena* arena, const Box& from)
    : Box(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Box::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Box::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, height_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::height_));
}
Box::~Box() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.Box)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Box::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Box::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.Box)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.height_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.height_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Box::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Box::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Box, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Box_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 height = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Box, _impl_.height_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(Box, _impl_.height_)}},
    // optional uint32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Box, _impl_.x_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Box, _impl_.x_)}},
    // optional uint32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Box, _impl_.y_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(Box, _impl_.y_)}},
    // optional uint32 width = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Box, _impl_.width_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(Box, _impl_.width_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 x = 1;
    {PROTOBUF_FIELD_OFFSET(Box, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 y = 2;
    {PROTOBUF_FIELD_OFFSET(Box, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 width = 3;
    {PROTOBUF_FIELD_OFFSET(Box, _impl_.width_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 height = 4;
    {PROTOBUF_FIELD_OFFSET(Box, _impl_.height_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Box::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.Box)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_x(), target);
  }

  // optional uint32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_y(), target);
  }

  // optional uint32 width = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_width(), target);
  }

  // optional uint32 height = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.Box)
  return target;
}

::size_t Box::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.Box)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional uint32 x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_x());
    }

    // optional uint32 y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_y());
    }

    // optional uint32 width = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_width());
    }

    // optional uint32 height = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_height());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Box::_class_data_ = {
    Box::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Box::GetClassData() const {
  return &_class_data_;
}

void Box::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Box*>(&to_msg);
  auto& from = static_cast<const Box&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.Box)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.width_ = from._impl_.width_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.height_ = from._impl_.height_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Box::CopyFrom(const Box& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.Box)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Box::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Box::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Box::InternalSwap(Box* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Box, _impl_.height_)
      + sizeof(Box::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(Box, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Box::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[4]);
}
// ===================================================================

class SpriteInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<SpriteInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_._has_bits_);
  static void set_has_pattern_width(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_pattern_height(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_pattern_depth(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_layers(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_bounding_square(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::otclient::protobuf::appearances::SpriteAnimation& animation(const SpriteInfo* msg);
  static void set_has_animation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_is_opaque(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::otclient::protobuf::appearances::SpriteAnimation& SpriteInfo::_Internal::animation(const SpriteInfo* msg) {
  return *msg->_impl_.animation_;
}
SpriteInfo::SpriteInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.SpriteInfo)
}
inline PROTOBUF_NDEBUG_INLINE SpriteInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        sprite_id_{visibility, arena, from.sprite_id_},
        bounding_box_per_direction_{visibility, arena, from.bounding_box_per_direction_} {}

SpriteInfo::SpriteInfo(
    ::google::protobuf::Arena* arena,
    const SpriteInfo& from)
    : ::google::protobuf::Message(arena) {
  SpriteInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.animation_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::SpriteAnimation>(arena, *from._impl_.animation_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pattern_width_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, pattern_width_),
           offsetof(Impl_, is_opaque_) -
               offsetof(Impl_, pattern_width_) +
               sizeof(Impl_::is_opaque_));

  // @@protoc_insertion_point(copy_constructor:otclient.protobuf.appearances.SpriteInfo)
}
inline PROTOBUF_NDEBUG_INLINE SpriteInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        sprite_id_{visibility, arena},
        bounding_box_per_direction_{visibility, arena} {}

inline void SpriteInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, animation_),
           0,
           offsetof(Impl_, is_opaque_) -
               offsetof(Impl_, animation_) +
               sizeof(Impl_::is_opaque_));
}
SpriteInfo::~SpriteInfo() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.SpriteInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SpriteInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.animation_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SpriteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.SpriteInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sprite_id_.Clear();
  _impl_.bounding_box_per_direction_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.animation_ != nullptr);
    _impl_.animation_->Clear();
  }
  if (cached_has_bits & 0x0000007eu) {
    ::memset(&_impl_.pattern_width_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_opaque_) -
        reinterpret_cast<char*>(&_impl_.pattern_width_)) + sizeof(_impl_.is_opaque_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SpriteInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 0, 2> SpriteInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_SpriteInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 pattern_width = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteInfo, _impl_.pattern_width_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_width_)}},
    // optional uint32 pattern_height = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteInfo, _impl_.pattern_height_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_height_)}},
    // optional uint32 pattern_depth = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteInfo, _impl_.pattern_depth_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_depth_)}},
    // optional uint32 layers = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteInfo, _impl_.layers_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.layers_)}},
    // repeated uint32 sprite_id = 5;
    {::_pbi::TcParser::FastV32R1,
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.sprite_id_)}},
    // optional .otclient.protobuf.appearances.SpriteAnimation animation = 6;
    {::_pbi::TcParser::FastMtS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.animation_)}},
    // optional uint32 bounding_square = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpriteInfo, _impl_.bounding_square_), 5>(),
     {56, 5, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.bounding_square_)}},
    // optional bool is_opaque = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SpriteInfo, _impl_.is_opaque_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.is_opaque_)}},
    // repeated .otclient.protobuf.appearances.Box bounding_box_per_direction = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.bounding_box_per_direction_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 pattern_width = 1;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_width_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 pattern_height = 2;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_height_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 pattern_depth = 3;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.pattern_depth_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 layers = 4;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.layers_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated uint32 sprite_id = 5;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.sprite_id_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUInt32)},
    // optional .otclient.protobuf.appearances.SpriteAnimation animation = 6;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.animation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional uint32 bounding_square = 7;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.bounding_square_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bool is_opaque = 8;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.is_opaque_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .otclient.protobuf.appearances.Box bounding_box_per_direction = 9;
    {PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.bounding_box_per_direction_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::SpriteAnimation>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::Box>()},
  }}, {{
  }},
};

::uint8_t* SpriteInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.SpriteInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 pattern_width = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_pattern_width(), target);
  }

  // optional uint32 pattern_height = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_pattern_height(), target);
  }

  // optional uint32 pattern_depth = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_pattern_depth(), target);
  }

  // optional uint32 layers = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_layers(), target);
  }

  // repeated uint32 sprite_id = 5;
  for (int i = 0, n = this->_internal_sprite_id_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_sprite_id().Get(i), target);
  }

  // optional .otclient.protobuf.appearances.SpriteAnimation animation = 6;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, _Internal::animation(this),
        _Internal::animation(this).GetCachedSize(), target, stream);
  }

  // optional uint32 bounding_square = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_bounding_square(), target);
  }

  // optional bool is_opaque = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_is_opaque(), target);
  }

  // repeated .otclient.protobuf.appearances.Box bounding_box_per_direction = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bounding_box_per_direction_size()); i < n; i++) {
    const auto& repfield = this->_internal_bounding_box_per_direction().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.SpriteInfo)
  return target;
}

::size_t SpriteInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.SpriteInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 sprite_id = 5;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::UInt32Size(
        this->_internal_sprite_id())
    ;
    std::size_t tag_size = std::size_t{1} *
        ::_pbi::FromIntSize(this->_internal_sprite_id_size());
    ;
    total_size += tag_size + data_size;
  }
  // repeated .otclient.protobuf.appearances.Box bounding_box_per_direction = 9;
  total_size += 1UL * this->_internal_bounding_box_per_direction_size();
  for (const auto& msg : this->_internal_bounding_box_per_direction()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .otclient.protobuf.appearances.SpriteAnimation animation = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.animation_);
    }

    // optional uint32 pattern_width = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_pattern_width());
    }

    // optional uint32 pattern_height = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_pattern_height());
    }

    // optional uint32 pattern_depth = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_pattern_depth());
    }

    // optional uint32 layers = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_layers());
    }

    // optional uint32 bounding_square = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_bounding_square());
    }

    // optional bool is_opaque = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SpriteInfo::_class_data_ = {
    SpriteInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SpriteInfo::GetClassData() const {
  return &_class_data_;
}

void SpriteInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SpriteInfo*>(&to_msg);
  auto& from = static_cast<const SpriteInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.SpriteInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sprite_id()->MergeFrom(from._internal_sprite_id());
  _this->_internal_mutable_bounding_box_per_direction()->MergeFrom(
      from._internal_bounding_box_per_direction());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_animation()->::otclient::protobuf::appearances::SpriteAnimation::MergeFrom(
          from._internal_animation());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.pattern_width_ = from._impl_.pattern_width_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.pattern_height_ = from._impl_.pattern_height_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.pattern_depth_ = from._impl_.pattern_depth_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.layers_ = from._impl_.layers_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.bounding_square_ = from._impl_.bounding_square_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.is_opaque_ = from._impl_.is_opaque_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpriteInfo::CopyFrom(const SpriteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.SpriteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SpriteInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SpriteInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SpriteInfo::InternalSwap(SpriteInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.sprite_id_.InternalSwap(&other->_impl_.sprite_id_);
  _impl_.bounding_box_per_direction_.InternalSwap(&other->_impl_.bounding_box_per_direction_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.is_opaque_)
      + sizeof(SpriteInfo::_impl_.is_opaque_)
      - PROTOBUF_FIELD_OFFSET(SpriteInfo, _impl_.animation_)>(
          reinterpret_cast<char*>(&_impl_.animation_),
          reinterpret_cast<char*>(&other->_impl_.animation_));
}

::google::protobuf::Metadata SpriteInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[5]);
}
// ===================================================================

class FrameGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<FrameGroup>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_._has_bits_);
  static void set_has_fixed_frame_group(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::otclient::protobuf::appearances::SpriteInfo& sprite_info(const FrameGroup* msg);
  static void set_has_sprite_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::otclient::protobuf::appearances::SpriteInfo& FrameGroup::_Internal::sprite_info(const FrameGroup* msg) {
  return *msg->_impl_.sprite_info_;
}
FrameGroup::FrameGroup(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.FrameGroup)
}
inline PROTOBUF_NDEBUG_INLINE FrameGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FrameGroup::FrameGroup(
    ::google::protobuf::Arena* arena,
    const FrameGroup& from)
    : ::google::protobuf::Message(arena) {
  FrameGroup* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.sprite_info_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::SpriteInfo>(arena, *from._impl_.sprite_info_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, fixed_frame_group_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, fixed_frame_group_),
           offsetof(Impl_, id_) -
               offsetof(Impl_, fixed_frame_group_) +
               sizeof(Impl_::id_));

  // @@protoc_insertion_point(copy_constructor:otclient.protobuf.appearances.FrameGroup)
}
inline PROTOBUF_NDEBUG_INLINE FrameGroup::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FrameGroup::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sprite_info_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, sprite_info_) +
               sizeof(Impl_::id_));
}
FrameGroup::~FrameGroup() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.FrameGroup)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void FrameGroup::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.sprite_info_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void FrameGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.FrameGroup)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.sprite_info_ != nullptr);
    _impl_.sprite_info_->Clear();
  }
  if (cached_has_bits & 0x00000006u) {
    ::memset(&_impl_.fixed_frame_group_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.id_) -
        reinterpret_cast<char*>(&_impl_.fixed_frame_group_)) + sizeof(_impl_.id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* FrameGroup::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> FrameGroup::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_FrameGroup_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .otclient.protobuf.appearances.FIXED_FRAME_GROUP fixed_frame_group = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 1, 2, PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.fixed_frame_group_)}},
    // optional uint32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FrameGroup, _impl_.id_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.id_)}},
    // optional .otclient.protobuf.appearances.SpriteInfo sprite_info = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.sprite_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .otclient.protobuf.appearances.FIXED_FRAME_GROUP fixed_frame_group = 1;
    {PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.fixed_frame_group_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 id = 2;
    {PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional .otclient.protobuf.appearances.SpriteInfo sprite_info = 3;
    {PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.sprite_info_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {0, 3},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::SpriteInfo>()},
  }}, {{
  }},
};

::uint8_t* FrameGroup::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.FrameGroup)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.FIXED_FRAME_GROUP fixed_frame_group = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_fixed_frame_group(), target);
  }

  // optional uint32 id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_id(), target);
  }

  // optional .otclient.protobuf.appearances.SpriteInfo sprite_info = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::sprite_info(this),
        _Internal::sprite_info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.FrameGroup)
  return target;
}

::size_t FrameGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.FrameGroup)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .otclient.protobuf.appearances.SpriteInfo sprite_info = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.sprite_info_);
    }

    // optional .otclient.protobuf.appearances.FIXED_FRAME_GROUP fixed_frame_group = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_fixed_frame_group());
    }

    // optional uint32 id = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData FrameGroup::_class_data_ = {
    FrameGroup::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* FrameGroup::GetClassData() const {
  return &_class_data_;
}

void FrameGroup::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<FrameGroup*>(&to_msg);
  auto& from = static_cast<const FrameGroup&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.FrameGroup)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_sprite_info()->::otclient::protobuf::appearances::SpriteInfo::MergeFrom(
          from._internal_sprite_info());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.fixed_frame_group_ = from._impl_.fixed_frame_group_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrameGroup::CopyFrom(const FrameGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.FrameGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool FrameGroup::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* FrameGroup::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void FrameGroup::InternalSwap(FrameGroup* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.id_)
      + sizeof(FrameGroup::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(FrameGroup, _impl_.sprite_info_)>(
          reinterpret_cast<char*>(&_impl_.sprite_info_),
          reinterpret_cast<char*>(&other->_impl_.sprite_info_));
}

::google::protobuf::Metadata FrameGroup::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[6]);
}
// ===================================================================

class Appearance::_Internal {
 public:
  using HasBits = decltype(std::declval<Appearance>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Appearance, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlags& flags(const Appearance* msg);
  static void set_has_flags(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_description(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::otclient::protobuf::appearances::AppearanceFlags& Appearance::_Internal::flags(const Appearance* msg) {
  return *msg->_impl_.flags_;
}
Appearance::Appearance(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.Appearance)
}
inline PROTOBUF_NDEBUG_INLINE Appearance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        frame_group_{visibility, arena, from.frame_group_},
        name_(arena, from.name_),
        description_(arena, from.description_) {}

Appearance::Appearance(
    ::google::protobuf::Arena* arena,
    const Appearance& from)
    : ::google::protobuf::Message(arena) {
  Appearance* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.flags_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlags>(arena, *from._impl_.flags_)
                : nullptr;
  _impl_.id_ = from._impl_.id_;

  // @@protoc_insertion_point(copy_constructor:otclient.protobuf.appearances.Appearance)
}
inline PROTOBUF_NDEBUG_INLINE Appearance::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        frame_group_{visibility, arena},
        name_(arena),
        description_(arena) {}

inline void Appearance::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, flags_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, flags_) +
               sizeof(Impl_::id_));
}
Appearance::~Appearance() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.Appearance)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Appearance::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  delete _impl_.flags_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Appearance::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.Appearance)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.frame_group_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.flags_ != nullptr);
      _impl_.flags_->Clear();
    }
  }
  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Appearance::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 64, 2> Appearance::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Appearance, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Appearance_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Appearance, _impl_.id_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(Appearance, _impl_.id_)}},
    // repeated .otclient.protobuf.appearances.FrameGroup frame_group = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Appearance, _impl_.frame_group_)}},
    // optional .otclient.protobuf.appearances.AppearanceFlags flags = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(Appearance, _impl_.flags_)}},
    // optional string name = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(Appearance, _impl_.name_)}},
    // optional string description = 5;
    {::_pbi::TcParser::FastSS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(Appearance, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(Appearance, _impl_.id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // repeated .otclient.protobuf.appearances.FrameGroup frame_group = 2;
    {PROTOBUF_FIELD_OFFSET(Appearance, _impl_.frame_group_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .otclient.protobuf.appearances.AppearanceFlags flags = 3;
    {PROTOBUF_FIELD_OFFSET(Appearance, _impl_.flags_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional string name = 4;
    {PROTOBUF_FIELD_OFFSET(Appearance, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string description = 5;
    {PROTOBUF_FIELD_OFFSET(Appearance, _impl_.description_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::FrameGroup>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlags>()},
  }}, {{
    "\50\0\0\0\4\13\0\0"
    "otclient.protobuf.appearances.Appearance"
    "name"
    "description"
  }},
};

::uint8_t* Appearance::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.Appearance)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  // repeated .otclient.protobuf.appearances.FrameGroup frame_group = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_frame_group_size()); i < n; i++) {
    const auto& repfield = this->_internal_frame_group().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // optional .otclient.protobuf.appearances.AppearanceFlags flags = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::flags(this),
        _Internal::flags(this).GetCachedSize(), target, stream);
  }

  // optional string name = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "otclient.protobuf.appearances.Appearance.name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string description = 5;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "otclient.protobuf.appearances.Appearance.description");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.Appearance)
  return target;
}

::size_t Appearance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.Appearance)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .otclient.protobuf.appearances.FrameGroup frame_group = 2;
  total_size += 1UL * this->_internal_frame_group_size();
  for (const auto& msg : this->_internal_frame_group()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string name = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string description = 5;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_description());
    }

    // optional .otclient.protobuf.appearances.AppearanceFlags flags = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.flags_);
    }

    // optional uint32 id = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Appearance::_class_data_ = {
    Appearance::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Appearance::GetClassData() const {
  return &_class_data_;
}

void Appearance::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Appearance*>(&to_msg);
  auto& from = static_cast<const Appearance&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.Appearance)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_frame_group()->MergeFrom(
      from._internal_frame_group());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_description(from._internal_description());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_flags()->::otclient::protobuf::appearances::AppearanceFlags::MergeFrom(
          from._internal_flags());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.id_ = from._impl_.id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Appearance::CopyFrom(const Appearance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.Appearance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Appearance::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Appearance::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Appearance::InternalSwap(Appearance* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.frame_group_.InternalSwap(&other->_impl_.frame_group_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Appearance, _impl_.id_)
      + sizeof(Appearance::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(Appearance, _impl_.flags_)>(
          reinterpret_cast<char*>(&_impl_.flags_),
          reinterpret_cast<char*>(&other->_impl_.flags_));
}

::google::protobuf::Metadata Appearance::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[7]);
}
// ===================================================================

class AppearanceFlags::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlags>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_._has_bits_);
  static const ::otclient::protobuf::appearances::AppearanceFlagBank& bank(const AppearanceFlags* msg);
  static void set_has_bank(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_clip(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_bottom(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_top(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_container(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_cumulative(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_usable(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_forceuse(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_multiuse(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagWrite& write(const AppearanceFlags* msg);
  static void set_has_write(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagWriteOnce& write_once(const AppearanceFlags* msg);
  static void set_has_write_once(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_liquidpool(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_unpass(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_unmove(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_unsight(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_avoid(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_no_movement_animation(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_take(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_liquidcontainer(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_hang(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagHook& hook(const AppearanceFlags* msg);
  static void set_has_hook(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_rotate(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagLight& light(const AppearanceFlags* msg);
  static void set_has_light(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_dont_hide(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
  static void set_has_translucent(HasBits* has_bits) {
    (*has_bits)[1] |= 4u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagShift& shift(const AppearanceFlags* msg);
  static void set_has_shift(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagHeight& height(const AppearanceFlags* msg);
  static void set_has_height(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_lying_object(HasBits* has_bits) {
    (*has_bits)[1] |= 8u;
  }
  static void set_has_animate_always(HasBits* has_bits) {
    (*has_bits)[1] |= 16u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagAutomap& automap(const AppearanceFlags* msg);
  static void set_has_automap(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagLenshelp& lenshelp(const AppearanceFlags* msg);
  static void set_has_lenshelp(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_fullbank(HasBits* has_bits) {
    (*has_bits)[1] |= 32u;
  }
  static void set_has_ignore_look(HasBits* has_bits) {
    (*has_bits)[1] |= 64u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagClothes& clothes(const AppearanceFlags* msg);
  static void set_has_clothes(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagDefaultAction& default_action(const AppearanceFlags* msg);
  static void set_has_default_action(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagMarket& market(const AppearanceFlags* msg);
  static void set_has_market(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_wrap(HasBits* has_bits) {
    (*has_bits)[1] |= 128u;
  }
  static void set_has_unwrap(HasBits* has_bits) {
    (*has_bits)[1] |= 256u;
  }
  static void set_has_topeffect(HasBits* has_bits) {
    (*has_bits)[1] |= 512u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagChangedToExpire& changedtoexpire(const AppearanceFlags* msg);
  static void set_has_changedtoexpire(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_corpse(HasBits* has_bits) {
    (*has_bits)[1] |= 1024u;
  }
  static void set_has_player_corpse(HasBits* has_bits) {
    (*has_bits)[1] |= 2048u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagCyclopedia& cyclopediaitem(const AppearanceFlags* msg);
  static void set_has_cyclopediaitem(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_ammo(HasBits* has_bits) {
    (*has_bits)[1] |= 4096u;
  }
  static void set_has_show_off_socket(HasBits* has_bits) {
    (*has_bits)[1] |= 8192u;
  }
  static void set_has_reportable(HasBits* has_bits) {
    (*has_bits)[1] |= 16384u;
  }
  static const ::otclient::protobuf::appearances::AppearanceFlagUpgradeClassification& upgradeclassification(const AppearanceFlags* msg);
  static void set_has_upgradeclassification(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_reverse_addons_east(HasBits* has_bits) {
    (*has_bits)[1] |= 32768u;
  }
  static void set_has_reverse_addons_west(HasBits* has_bits) {
    (*has_bits)[1] |= 65536u;
  }
  static void set_has_reverse_addons_south(HasBits* has_bits) {
    (*has_bits)[1] |= 131072u;
  }
  static void set_has_reverse_addons_north(HasBits* has_bits) {
    (*has_bits)[1] |= 262144u;
  }
  static void set_has_wearout(HasBits* has_bits) {
    (*has_bits)[1] |= 524288u;
  }
  static void set_has_clockexpire(HasBits* has_bits) {
    (*has_bits)[1] |= 1048576u;
  }
  static void set_has_expire(HasBits* has_bits) {
    (*has_bits)[1] |= 2097152u;
  }
  static void set_has_expirestop(HasBits* has_bits) {
    (*has_bits)[1] |= 4194304u;
  }
  static void set_has_deco_kit(HasBits* has_bits) {
    (*has_bits)[1] |= 8388608u;
  }
};

const ::otclient::protobuf::appearances::AppearanceFlagBank& AppearanceFlags::_Internal::bank(const AppearanceFlags* msg) {
  return *msg->_impl_.bank_;
}
const ::otclient::protobuf::appearances::AppearanceFlagWrite& AppearanceFlags::_Internal::write(const AppearanceFlags* msg) {
  return *msg->_impl_.write_;
}
const ::otclient::protobuf::appearances::AppearanceFlagWriteOnce& AppearanceFlags::_Internal::write_once(const AppearanceFlags* msg) {
  return *msg->_impl_.write_once_;
}
const ::otclient::protobuf::appearances::AppearanceFlagHook& AppearanceFlags::_Internal::hook(const AppearanceFlags* msg) {
  return *msg->_impl_.hook_;
}
const ::otclient::protobuf::appearances::AppearanceFlagLight& AppearanceFlags::_Internal::light(const AppearanceFlags* msg) {
  return *msg->_impl_.light_;
}
const ::otclient::protobuf::appearances::AppearanceFlagShift& AppearanceFlags::_Internal::shift(const AppearanceFlags* msg) {
  return *msg->_impl_.shift_;
}
const ::otclient::protobuf::appearances::AppearanceFlagHeight& AppearanceFlags::_Internal::height(const AppearanceFlags* msg) {
  return *msg->_impl_.height_;
}
const ::otclient::protobuf::appearances::AppearanceFlagAutomap& AppearanceFlags::_Internal::automap(const AppearanceFlags* msg) {
  return *msg->_impl_.automap_;
}
const ::otclient::protobuf::appearances::AppearanceFlagLenshelp& AppearanceFlags::_Internal::lenshelp(const AppearanceFlags* msg) {
  return *msg->_impl_.lenshelp_;
}
const ::otclient::protobuf::appearances::AppearanceFlagClothes& AppearanceFlags::_Internal::clothes(const AppearanceFlags* msg) {
  return *msg->_impl_.clothes_;
}
const ::otclient::protobuf::appearances::AppearanceFlagDefaultAction& AppearanceFlags::_Internal::default_action(const AppearanceFlags* msg) {
  return *msg->_impl_.default_action_;
}
const ::otclient::protobuf::appearances::AppearanceFlagMarket& AppearanceFlags::_Internal::market(const AppearanceFlags* msg) {
  return *msg->_impl_.market_;
}
const ::otclient::protobuf::appearances::AppearanceFlagChangedToExpire& AppearanceFlags::_Internal::changedtoexpire(const AppearanceFlags* msg) {
  return *msg->_impl_.changedtoexpire_;
}
const ::otclient::protobuf::appearances::AppearanceFlagCyclopedia& AppearanceFlags::_Internal::cyclopediaitem(const AppearanceFlags* msg) {
  return *msg->_impl_.cyclopediaitem_;
}
const ::otclient::protobuf::appearances::AppearanceFlagUpgradeClassification& AppearanceFlags::_Internal::upgradeclassification(const AppearanceFlags* msg) {
  return *msg->_impl_.upgradeclassification_;
}
AppearanceFlags::AppearanceFlags(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlags)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlags::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        npcsaledata_{visibility, arena, from.npcsaledata_} {}

AppearanceFlags::AppearanceFlags(
    ::google::protobuf::Arena* arena,
    const AppearanceFlags& from)
    : ::google::protobuf::Message(arena) {
  AppearanceFlags* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bank_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagBank>(arena, *from._impl_.bank_)
                : nullptr;
  _impl_.write_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagWrite>(arena, *from._impl_.write_)
                : nullptr;
  _impl_.write_once_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagWriteOnce>(arena, *from._impl_.write_once_)
                : nullptr;
  _impl_.hook_ = (cached_has_bits & 0x00000008u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagHook>(arena, *from._impl_.hook_)
                : nullptr;
  _impl_.light_ = (cached_has_bits & 0x00000010u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagLight>(arena, *from._impl_.light_)
                : nullptr;
  _impl_.shift_ = (cached_has_bits & 0x00000020u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagShift>(arena, *from._impl_.shift_)
                : nullptr;
  _impl_.height_ = (cached_has_bits & 0x00000040u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagHeight>(arena, *from._impl_.height_)
                : nullptr;
  _impl_.automap_ = (cached_has_bits & 0x00000080u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagAutomap>(arena, *from._impl_.automap_)
                : nullptr;
  _impl_.lenshelp_ = (cached_has_bits & 0x00000100u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagLenshelp>(arena, *from._impl_.lenshelp_)
                : nullptr;
  _impl_.clothes_ = (cached_has_bits & 0x00000200u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagClothes>(arena, *from._impl_.clothes_)
                : nullptr;
  _impl_.default_action_ = (cached_has_bits & 0x00000400u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagDefaultAction>(arena, *from._impl_.default_action_)
                : nullptr;
  _impl_.market_ = (cached_has_bits & 0x00000800u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagMarket>(arena, *from._impl_.market_)
                : nullptr;
  _impl_.changedtoexpire_ = (cached_has_bits & 0x00001000u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagChangedToExpire>(arena, *from._impl_.changedtoexpire_)
                : nullptr;
  _impl_.cyclopediaitem_ = (cached_has_bits & 0x00002000u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagCyclopedia>(arena, *from._impl_.cyclopediaitem_)
                : nullptr;
  _impl_.upgradeclassification_ = (cached_has_bits & 0x00004000u)
                ? CreateMaybeMessage<::otclient::protobuf::appearances::AppearanceFlagUpgradeClassification>(arena, *from._impl_.upgradeclassification_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, clip_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, clip_),
           offsetof(Impl_, deco_kit_) -
               offsetof(Impl_, clip_) +
               sizeof(Impl_::deco_kit_));

  // @@protoc_insertion_point(copy_constructor:otclient.protobuf.appearances.AppearanceFlags)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlags::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        npcsaledata_{visibility, arena} {}

inline void AppearanceFlags::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bank_),
           0,
           offsetof(Impl_, deco_kit_) -
               offsetof(Impl_, bank_) +
               sizeof(Impl_::deco_kit_));
}
AppearanceFlags::~AppearanceFlags() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlags)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlags::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.bank_;
  delete _impl_.write_;
  delete _impl_.write_once_;
  delete _impl_.hook_;
  delete _impl_.light_;
  delete _impl_.shift_;
  delete _impl_.height_;
  delete _impl_.automap_;
  delete _impl_.lenshelp_;
  delete _impl_.clothes_;
  delete _impl_.default_action_;
  delete _impl_.market_;
  delete _impl_.changedtoexpire_;
  delete _impl_.cyclopediaitem_;
  delete _impl_.upgradeclassification_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlags::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlags)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.npcsaledata_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.bank_ != nullptr);
      _impl_.bank_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.write_ != nullptr);
      _impl_.write_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.write_once_ != nullptr);
      _impl_.write_once_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.hook_ != nullptr);
      _impl_.hook_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      ABSL_DCHECK(_impl_.light_ != nullptr);
      _impl_.light_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      ABSL_DCHECK(_impl_.shift_ != nullptr);
      _impl_.shift_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      ABSL_DCHECK(_impl_.height_ != nullptr);
      _impl_.height_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      ABSL_DCHECK(_impl_.automap_ != nullptr);
      _impl_.automap_->Clear();
    }
  }
  if (cached_has_bits & 0x00007f00u) {
    if (cached_has_bits & 0x00000100u) {
      ABSL_DCHECK(_impl_.lenshelp_ != nullptr);
      _impl_.lenshelp_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      ABSL_DCHECK(_impl_.clothes_ != nullptr);
      _impl_.clothes_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      ABSL_DCHECK(_impl_.default_action_ != nullptr);
      _impl_.default_action_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      ABSL_DCHECK(_impl_.market_ != nullptr);
      _impl_.market_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      ABSL_DCHECK(_impl_.changedtoexpire_ != nullptr);
      _impl_.changedtoexpire_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      ABSL_DCHECK(_impl_.cyclopediaitem_ != nullptr);
      _impl_.cyclopediaitem_->Clear();
    }
    if (cached_has_bits & 0x00004000u) {
      ABSL_DCHECK(_impl_.upgradeclassification_ != nullptr);
      _impl_.upgradeclassification_->Clear();
    }
  }
  _impl_.clip_ = false;
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.bottom_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.liquidpool_) -
        reinterpret_cast<char*>(&_impl_.bottom_)) + sizeof(_impl_.liquidpool_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&_impl_.unpass_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.hang_) -
        reinterpret_cast<char*>(&_impl_.unpass_)) + sizeof(_impl_.hang_));
  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.rotate_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.wrap_) -
        reinterpret_cast<char*>(&_impl_.rotate_)) + sizeof(_impl_.wrap_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&_impl_.unwrap_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.reverse_addons_east_) -
        reinterpret_cast<char*>(&_impl_.unwrap_)) + sizeof(_impl_.reverse_addons_east_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&_impl_.reverse_addons_west_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.deco_kit_) -
        reinterpret_cast<char*>(&_impl_.reverse_addons_west_)) + sizeof(_impl_.deco_kit_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlags::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 57, 16, 0, 9> AppearanceFlags::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_._has_bits_),
    0, // no _extensions_
    57, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    0,  // skipmap
    offsetof(decltype(_table_), field_entries),
    57,  // num_field_entries
    16,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AppearanceFlags_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .otclient.protobuf.appearances.AppearanceFlagBank bank = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.bank_)}},
    // optional bool clip = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.clip_), 15>(),
     {16, 15, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.clip_)}},
    // optional bool bottom = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.bottom_), 16>(),
     {24, 16, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.bottom_)}},
    // optional bool top = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.top_), 17>(),
     {32, 17, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.top_)}},
    // optional bool container = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.container_), 18>(),
     {40, 18, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.container_)}},
    // optional bool cumulative = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.cumulative_), 19>(),
     {48, 19, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.cumulative_)}},
    // optional bool usable = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.usable_), 20>(),
     {56, 20, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.usable_)}},
    // optional bool forceuse = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.forceuse_), 21>(),
     {64, 21, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.forceuse_)}},
    // optional bool multiuse = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.multiuse_), 22>(),
     {72, 22, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.multiuse_)}},
    // optional .otclient.protobuf.appearances.AppearanceFlagWrite write = 10;
    {::_pbi::TcParser::FastMtS1,
     {82, 1, 1, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.write_)}},
    // optional .otclient.protobuf.appearances.AppearanceFlagWriteOnce write_once = 11;
    {::_pbi::TcParser::FastMtS1,
     {90, 2, 2, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.write_once_)}},
    // optional bool liquidpool = 12;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.liquidpool_), 23>(),
     {96, 23, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.liquidpool_)}},
    // optional bool unpass = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.unpass_), 24>(),
     {104, 24, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unpass_)}},
    // optional bool unmove = 14;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.unmove_), 25>(),
     {112, 25, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unmove_)}},
    // optional bool unsight = 15;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(AppearanceFlags, _impl_.unsight_), 26>(),
     {120, 26, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unsight_)}},
    // optional bool avoid = 16;
    {::_pbi::TcParser::FastV8S2,
     {384, 27, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.avoid_)}},
    // optional bool no_movement_animation = 17;
    {::_pbi::TcParser::FastV8S2,
     {392, 28, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.no_movement_animation_)}},
    // optional bool take = 18;
    {::_pbi::TcParser::FastV8S2,
     {400, 29, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.take_)}},
    // optional bool liquidcontainer = 19;
    {::_pbi::TcParser::FastV8S2,
     {408, 30, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.liquidcontainer_)}},
    // optional bool hang = 20;
    {::_pbi::TcParser::FastV8S2,
     {416, 31, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.hang_)}},
    // optional .otclient.protobuf.appearances.AppearanceFlagHook hook = 21;
    {::_pbi::TcParser::FastMtS2,
     {426, 3, 3, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.hook_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .otclient.protobuf.appearances.AppearanceFlagLight light = 23;
    {::_pbi::TcParser::FastMtS2,
     {442, 4, 4, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.light_)}},
    // repeated .otclient.protobuf.appearances.AppearanceFlagNPC npcsaledata = 40;
    {::_pbi::TcParser::FastMtR2,
     {706, 63, 12, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.npcsaledata_)}},
    // optional .otclient.protobuf.appearances.AppearanceFlagChangedToExpire changedtoexpire = 41;
    {::_pbi::TcParser::FastMtS2,
     {714, 12, 13, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.changedtoexpire_)}},
    // optional .otclient.protobuf.appearances.AppearanceFlagShift shift = 26;
    {::_pbi::TcParser::FastMtS2,
     {466, 5, 5, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.shift_)}},
    // optional .otclient.protobuf.appearances.AppearanceFlagHeight height = 27;
    {::_pbi::TcParser::FastMtS2,
     {474, 6, 6, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.height_)}},
    // optional .otclient.protobuf.appearances.AppearanceFlagCyclopedia cyclopediaitem = 44;
    {::_pbi::TcParser::FastMtS2,
     {738, 13, 14, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.cyclopediaitem_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional .otclient.protobuf.appearances.AppearanceFlagAutomap automap = 30;
    {::_pbi::TcParser::FastMtS2,
     {498, 7, 7, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.automap_)}},
    // optional .otclient.protobuf.appearances.AppearanceFlagLenshelp lenshelp = 31;
    {::_pbi::TcParser::FastMtS2,
     {506, 8, 8, PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.lenshelp_)}},
  }}, {{
    33, 0, 2,
    0, 32, 65024, 48,
    65535, 65535
  }}, {{
    // optional .otclient.protobuf.appearances.AppearanceFlagBank bank = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.bank_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool clip = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.clip_), _Internal::kHasBitsOffset + 15, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool bottom = 3;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.bottom_), _Internal::kHasBitsOffset + 16, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool top = 4;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.top_), _Internal::kHasBitsOffset + 17, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool container = 5;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.container_), _Internal::kHasBitsOffset + 18, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool cumulative = 6;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.cumulative_), _Internal::kHasBitsOffset + 19, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool usable = 7;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.usable_), _Internal::kHasBitsOffset + 20, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool forceuse = 8;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.forceuse_), _Internal::kHasBitsOffset + 21, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool multiuse = 9;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.multiuse_), _Internal::kHasBitsOffset + 22, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .otclient.protobuf.appearances.AppearanceFlagWrite write = 10;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.write_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .otclient.protobuf.appearances.AppearanceFlagWriteOnce write_once = 11;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.write_once_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool liquidpool = 12;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.liquidpool_), _Internal::kHasBitsOffset + 23, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool unpass = 13;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unpass_), _Internal::kHasBitsOffset + 24, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool unmove = 14;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unmove_), _Internal::kHasBitsOffset + 25, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool unsight = 15;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unsight_), _Internal::kHasBitsOffset + 26, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool avoid = 16;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.avoid_), _Internal::kHasBitsOffset + 27, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool no_movement_animation = 17;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.no_movement_animation_), _Internal::kHasBitsOffset + 28, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool take = 18;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.take_), _Internal::kHasBitsOffset + 29, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool liquidcontainer = 19;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.liquidcontainer_), _Internal::kHasBitsOffset + 30, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool hang = 20;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.hang_), _Internal::kHasBitsOffset + 31, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .otclient.protobuf.appearances.AppearanceFlagHook hook = 21;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.hook_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool rotate = 22;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.rotate_), _Internal::kHasBitsOffset + 32, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .otclient.protobuf.appearances.AppearanceFlagLight light = 23;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.light_), _Internal::kHasBitsOffset + 4, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool dont_hide = 24;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.dont_hide_), _Internal::kHasBitsOffset + 33, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool translucent = 25;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.translucent_), _Internal::kHasBitsOffset + 34, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .otclient.protobuf.appearances.AppearanceFlagShift shift = 26;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.shift_), _Internal::kHasBitsOffset + 5, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .otclient.protobuf.appearances.AppearanceFlagHeight height = 27;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.height_), _Internal::kHasBitsOffset + 6, 6,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool lying_object = 28;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.lying_object_), _Internal::kHasBitsOffset + 35, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool animate_always = 29;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.animate_always_), _Internal::kHasBitsOffset + 36, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .otclient.protobuf.appearances.AppearanceFlagAutomap automap = 30;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.automap_), _Internal::kHasBitsOffset + 7, 7,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .otclient.protobuf.appearances.AppearanceFlagLenshelp lenshelp = 31;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.lenshelp_), _Internal::kHasBitsOffset + 8, 8,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool fullbank = 32;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.fullbank_), _Internal::kHasBitsOffset + 37, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool ignore_look = 33;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.ignore_look_), _Internal::kHasBitsOffset + 38, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .otclient.protobuf.appearances.AppearanceFlagClothes clothes = 34;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.clothes_), _Internal::kHasBitsOffset + 9, 9,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .otclient.protobuf.appearances.AppearanceFlagDefaultAction default_action = 35;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.default_action_), _Internal::kHasBitsOffset + 10, 10,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .otclient.protobuf.appearances.AppearanceFlagMarket market = 36;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.market_), _Internal::kHasBitsOffset + 11, 11,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool wrap = 37;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.wrap_), _Internal::kHasBitsOffset + 39, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool unwrap = 38;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.unwrap_), _Internal::kHasBitsOffset + 40, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool topeffect = 39;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.topeffect_), _Internal::kHasBitsOffset + 41, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated .otclient.protobuf.appearances.AppearanceFlagNPC npcsaledata = 40;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.npcsaledata_), -1, 12,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional .otclient.protobuf.appearances.AppearanceFlagChangedToExpire changedtoexpire = 41;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.changedtoexpire_), _Internal::kHasBitsOffset + 12, 13,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool corpse = 42;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.corpse_), _Internal::kHasBitsOffset + 42, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool player_corpse = 43;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.player_corpse_), _Internal::kHasBitsOffset + 43, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .otclient.protobuf.appearances.AppearanceFlagCyclopedia cyclopediaitem = 44;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.cyclopediaitem_), _Internal::kHasBitsOffset + 13, 14,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool ammo = 45;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.ammo_), _Internal::kHasBitsOffset + 44, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool show_off_socket = 46;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.show_off_socket_), _Internal::kHasBitsOffset + 45, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool reportable = 47;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.reportable_), _Internal::kHasBitsOffset + 46, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional .otclient.protobuf.appearances.AppearanceFlagUpgradeClassification upgradeclassification = 48;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.upgradeclassification_), _Internal::kHasBitsOffset + 14, 15,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // optional bool reverse_addons_east = 49;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.reverse_addons_east_), _Internal::kHasBitsOffset + 47, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool reverse_addons_west = 50;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.reverse_addons_west_), _Internal::kHasBitsOffset + 48, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool reverse_addons_south = 51;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.reverse_addons_south_), _Internal::kHasBitsOffset + 49, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool reverse_addons_north = 52;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.reverse_addons_north_), _Internal::kHasBitsOffset + 50, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool wearout = 53;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.wearout_), _Internal::kHasBitsOffset + 51, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool clockexpire = 54;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.clockexpire_), _Internal::kHasBitsOffset + 52, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool expire = 55;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.expire_), _Internal::kHasBitsOffset + 53, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool expirestop = 56;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.expirestop_), _Internal::kHasBitsOffset + 54, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool deco_kit = 57;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.deco_kit_), _Internal::kHasBitsOffset + 55, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagBank>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagWrite>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagWriteOnce>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagHook>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagLight>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagShift>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagHeight>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagAutomap>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagLenshelp>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagClothes>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagDefaultAction>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagMarket>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagNPC>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagChangedToExpire>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagCyclopedia>()},
    {::_pbi::TcParser::GetTable<::otclient::protobuf::appearances::AppearanceFlagUpgradeClassification>()},
  }}, {{
  }},
};

::uint8_t* AppearanceFlags::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlags)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.AppearanceFlagBank bank = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::bank(this),
        _Internal::bank(this).GetCachedSize(), target, stream);
  }

  // optional bool clip = 2;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_clip(), target);
  }

  // optional bool bottom = 3;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_bottom(), target);
  }

  // optional bool top = 4;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_top(), target);
  }

  // optional bool container = 5;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_container(), target);
  }

  // optional bool cumulative = 6;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_cumulative(), target);
  }

  // optional bool usable = 7;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        7, this->_internal_usable(), target);
  }

  // optional bool forceuse = 8;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        8, this->_internal_forceuse(), target);
  }

  // optional bool multiuse = 9;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        9, this->_internal_multiuse(), target);
  }

  // optional .otclient.protobuf.appearances.AppearanceFlagWrite write = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        10, _Internal::write(this),
        _Internal::write(this).GetCachedSize(), target, stream);
  }

  // optional .otclient.protobuf.appearances.AppearanceFlagWriteOnce write_once = 11;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        11, _Internal::write_once(this),
        _Internal::write_once(this).GetCachedSize(), target, stream);
  }

  // optional bool liquidpool = 12;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        12, this->_internal_liquidpool(), target);
  }

  // optional bool unpass = 13;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        13, this->_internal_unpass(), target);
  }

  // optional bool unmove = 14;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        14, this->_internal_unmove(), target);
  }

  // optional bool unsight = 15;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        15, this->_internal_unsight(), target);
  }

  // optional bool avoid = 16;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        16, this->_internal_avoid(), target);
  }

  // optional bool no_movement_animation = 17;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        17, this->_internal_no_movement_animation(), target);
  }

  // optional bool take = 18;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        18, this->_internal_take(), target);
  }

  // optional bool liquidcontainer = 19;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        19, this->_internal_liquidcontainer(), target);
  }

  // optional bool hang = 20;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        20, this->_internal_hang(), target);
  }

  // optional .otclient.protobuf.appearances.AppearanceFlagHook hook = 21;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        21, _Internal::hook(this),
        _Internal::hook(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool rotate = 22;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        22, this->_internal_rotate(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.AppearanceFlagLight light = 23;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        23, _Internal::light(this),
        _Internal::light(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool dont_hide = 24;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        24, this->_internal_dont_hide(), target);
  }

  // optional bool translucent = 25;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        25, this->_internal_translucent(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.AppearanceFlagShift shift = 26;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        26, _Internal::shift(this),
        _Internal::shift(this).GetCachedSize(), target, stream);
  }

  // optional .otclient.protobuf.appearances.AppearanceFlagHeight height = 27;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        27, _Internal::height(this),
        _Internal::height(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool lying_object = 28;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        28, this->_internal_lying_object(), target);
  }

  // optional bool animate_always = 29;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        29, this->_internal_animate_always(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.AppearanceFlagAutomap automap = 30;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        30, _Internal::automap(this),
        _Internal::automap(this).GetCachedSize(), target, stream);
  }

  // optional .otclient.protobuf.appearances.AppearanceFlagLenshelp lenshelp = 31;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        31, _Internal::lenshelp(this),
        _Internal::lenshelp(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool fullbank = 32;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        32, this->_internal_fullbank(), target);
  }

  // optional bool ignore_look = 33;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        33, this->_internal_ignore_look(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.AppearanceFlagClothes clothes = 34;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        34, _Internal::clothes(this),
        _Internal::clothes(this).GetCachedSize(), target, stream);
  }

  // optional .otclient.protobuf.appearances.AppearanceFlagDefaultAction default_action = 35;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        35, _Internal::default_action(this),
        _Internal::default_action(this).GetCachedSize(), target, stream);
  }

  // optional .otclient.protobuf.appearances.AppearanceFlagMarket market = 36;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        36, _Internal::market(this),
        _Internal::market(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool wrap = 37;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        37, this->_internal_wrap(), target);
  }

  // optional bool unwrap = 38;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        38, this->_internal_unwrap(), target);
  }

  // optional bool topeffect = 39;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        39, this->_internal_topeffect(), target);
  }

  // repeated .otclient.protobuf.appearances.AppearanceFlagNPC npcsaledata = 40;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_npcsaledata_size()); i < n; i++) {
    const auto& repfield = this->_internal_npcsaledata().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(40, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.AppearanceFlagChangedToExpire changedtoexpire = 41;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        41, _Internal::changedtoexpire(this),
        _Internal::changedtoexpire(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool corpse = 42;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        42, this->_internal_corpse(), target);
  }

  // optional bool player_corpse = 43;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        43, this->_internal_player_corpse(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.AppearanceFlagCyclopedia cyclopediaitem = 44;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        44, _Internal::cyclopediaitem(this),
        _Internal::cyclopediaitem(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool ammo = 45;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        45, this->_internal_ammo(), target);
  }

  // optional bool show_off_socket = 46;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        46, this->_internal_show_off_socket(), target);
  }

  // optional bool reportable = 47;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        47, this->_internal_reportable(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.AppearanceFlagUpgradeClassification upgradeclassification = 48;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        48, _Internal::upgradeclassification(this),
        _Internal::upgradeclassification(this).GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[1];
  // optional bool reverse_addons_east = 49;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        49, this->_internal_reverse_addons_east(), target);
  }

  // optional bool reverse_addons_west = 50;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        50, this->_internal_reverse_addons_west(), target);
  }

  // optional bool reverse_addons_south = 51;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        51, this->_internal_reverse_addons_south(), target);
  }

  // optional bool reverse_addons_north = 52;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        52, this->_internal_reverse_addons_north(), target);
  }

  // optional bool wearout = 53;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        53, this->_internal_wearout(), target);
  }

  // optional bool clockexpire = 54;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        54, this->_internal_clockexpire(), target);
  }

  // optional bool expire = 55;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        55, this->_internal_expire(), target);
  }

  // optional bool expirestop = 56;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        56, this->_internal_expirestop(), target);
  }

  // optional bool deco_kit = 57;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        57, this->_internal_deco_kit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlags)
  return target;
}

::size_t AppearanceFlags::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlags)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .otclient.protobuf.appearances.AppearanceFlagNPC npcsaledata = 40;
  total_size += 2UL * this->_internal_npcsaledata_size();
  for (const auto& msg : this->_internal_npcsaledata()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .otclient.protobuf.appearances.AppearanceFlagBank bank = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bank_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagWrite write = 10;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.write_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagWriteOnce write_once = 11;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.write_once_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagHook hook = 21;
    if (cached_has_bits & 0x00000008u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.hook_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagLight light = 23;
    if (cached_has_bits & 0x00000010u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.light_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagShift shift = 26;
    if (cached_has_bits & 0x00000020u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.shift_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagHeight height = 27;
    if (cached_has_bits & 0x00000040u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.height_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagAutomap automap = 30;
    if (cached_has_bits & 0x00000080u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.automap_);
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .otclient.protobuf.appearances.AppearanceFlagLenshelp lenshelp = 31;
    if (cached_has_bits & 0x00000100u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.lenshelp_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagClothes clothes = 34;
    if (cached_has_bits & 0x00000200u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.clothes_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagDefaultAction default_action = 35;
    if (cached_has_bits & 0x00000400u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.default_action_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagMarket market = 36;
    if (cached_has_bits & 0x00000800u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.market_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagChangedToExpire changedtoexpire = 41;
    if (cached_has_bits & 0x00001000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.changedtoexpire_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagCyclopedia cyclopediaitem = 44;
    if (cached_has_bits & 0x00002000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.cyclopediaitem_);
    }

    // optional .otclient.protobuf.appearances.AppearanceFlagUpgradeClassification upgradeclassification = 48;
    if (cached_has_bits & 0x00004000u) {
      total_size +=
          2 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.upgradeclassification_);
    }

    // optional bool clip = 2;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool bottom = 3;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2;
    }

    // optional bool top = 4;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2;
    }

    // optional bool container = 5;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2;
    }

    // optional bool cumulative = 6;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2;
    }

    // optional bool usable = 7;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2;
    }

    // optional bool forceuse = 8;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2;
    }

    // optional bool multiuse = 9;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2;
    }

    // optional bool liquidpool = 12;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2;
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional bool unpass = 13;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2;
    }

    // optional bool unmove = 14;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2;
    }

    // optional bool unsight = 15;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2;
    }

    // optional bool avoid = 16;
    if (cached_has_bits & 0x08000000u) {
      total_size += 3;
    }

    // optional bool no_movement_animation = 17;
    if (cached_has_bits & 0x10000000u) {
      total_size += 3;
    }

    // optional bool take = 18;
    if (cached_has_bits & 0x20000000u) {
      total_size += 3;
    }

    // optional bool liquidcontainer = 19;
    if (cached_has_bits & 0x40000000u) {
      total_size += 3;
    }

    // optional bool hang = 20;
    if (cached_has_bits & 0x80000000u) {
      total_size += 3;
    }

  }
  cached_has_bits = _impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    // optional bool rotate = 22;
    if (cached_has_bits & 0x00000001u) {
      total_size += 3;
    }

    // optional bool dont_hide = 24;
    if (cached_has_bits & 0x00000002u) {
      total_size += 3;
    }

    // optional bool translucent = 25;
    if (cached_has_bits & 0x00000004u) {
      total_size += 3;
    }

    // optional bool lying_object = 28;
    if (cached_has_bits & 0x00000008u) {
      total_size += 3;
    }

    // optional bool animate_always = 29;
    if (cached_has_bits & 0x00000010u) {
      total_size += 3;
    }

    // optional bool fullbank = 32;
    if (cached_has_bits & 0x00000020u) {
      total_size += 3;
    }

    // optional bool ignore_look = 33;
    if (cached_has_bits & 0x00000040u) {
      total_size += 3;
    }

    // optional bool wrap = 37;
    if (cached_has_bits & 0x00000080u) {
      total_size += 3;
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional bool unwrap = 38;
    if (cached_has_bits & 0x00000100u) {
      total_size += 3;
    }

    // optional bool topeffect = 39;
    if (cached_has_bits & 0x00000200u) {
      total_size += 3;
    }

    // optional bool corpse = 42;
    if (cached_has_bits & 0x00000400u) {
      total_size += 3;
    }

    // optional bool player_corpse = 43;
    if (cached_has_bits & 0x00000800u) {
      total_size += 3;
    }

    // optional bool ammo = 45;
    if (cached_has_bits & 0x00001000u) {
      total_size += 3;
    }

    // optional bool show_off_socket = 46;
    if (cached_has_bits & 0x00002000u) {
      total_size += 3;
    }

    // optional bool reportable = 47;
    if (cached_has_bits & 0x00004000u) {
      total_size += 3;
    }

    // optional bool reverse_addons_east = 49;
    if (cached_has_bits & 0x00008000u) {
      total_size += 3;
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional bool reverse_addons_west = 50;
    if (cached_has_bits & 0x00010000u) {
      total_size += 3;
    }

    // optional bool reverse_addons_south = 51;
    if (cached_has_bits & 0x00020000u) {
      total_size += 3;
    }

    // optional bool reverse_addons_north = 52;
    if (cached_has_bits & 0x00040000u) {
      total_size += 3;
    }

    // optional bool wearout = 53;
    if (cached_has_bits & 0x00080000u) {
      total_size += 3;
    }

    // optional bool clockexpire = 54;
    if (cached_has_bits & 0x00100000u) {
      total_size += 3;
    }

    // optional bool expire = 55;
    if (cached_has_bits & 0x00200000u) {
      total_size += 3;
    }

    // optional bool expirestop = 56;
    if (cached_has_bits & 0x00400000u) {
      total_size += 3;
    }

    // optional bool deco_kit = 57;
    if (cached_has_bits & 0x00800000u) {
      total_size += 3;
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlags::_class_data_ = {
    AppearanceFlags::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlags::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlags::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlags*>(&to_msg);
  auto& from = static_cast<const AppearanceFlags&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlags)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_npcsaledata()->MergeFrom(
      from._internal_npcsaledata());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_bank()->::otclient::protobuf::appearances::AppearanceFlagBank::MergeFrom(
          from._internal_bank());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_write()->::otclient::protobuf::appearances::AppearanceFlagWrite::MergeFrom(
          from._internal_write());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_write_once()->::otclient::protobuf::appearances::AppearanceFlagWriteOnce::MergeFrom(
          from._internal_write_once());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_mutable_hook()->::otclient::protobuf::appearances::AppearanceFlagHook::MergeFrom(
          from._internal_hook());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_mutable_light()->::otclient::protobuf::appearances::AppearanceFlagLight::MergeFrom(
          from._internal_light());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_mutable_shift()->::otclient::protobuf::appearances::AppearanceFlagShift::MergeFrom(
          from._internal_shift());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_internal_mutable_height()->::otclient::protobuf::appearances::AppearanceFlagHeight::MergeFrom(
          from._internal_height());
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_internal_mutable_automap()->::otclient::protobuf::appearances::AppearanceFlagAutomap::MergeFrom(
          from._internal_automap());
    }
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_internal_mutable_lenshelp()->::otclient::protobuf::appearances::AppearanceFlagLenshelp::MergeFrom(
          from._internal_lenshelp());
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_internal_mutable_clothes()->::otclient::protobuf::appearances::AppearanceFlagClothes::MergeFrom(
          from._internal_clothes());
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_internal_mutable_default_action()->::otclient::protobuf::appearances::AppearanceFlagDefaultAction::MergeFrom(
          from._internal_default_action());
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_internal_mutable_market()->::otclient::protobuf::appearances::AppearanceFlagMarket::MergeFrom(
          from._internal_market());
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_internal_mutable_changedtoexpire()->::otclient::protobuf::appearances::AppearanceFlagChangedToExpire::MergeFrom(
          from._internal_changedtoexpire());
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_internal_mutable_cyclopediaitem()->::otclient::protobuf::appearances::AppearanceFlagCyclopedia::MergeFrom(
          from._internal_cyclopediaitem());
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_internal_mutable_upgradeclassification()->::otclient::protobuf::appearances::AppearanceFlagUpgradeClassification::MergeFrom(
          from._internal_upgradeclassification());
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.clip_ = from._impl_.clip_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.bottom_ = from._impl_.bottom_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.top_ = from._impl_.top_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.container_ = from._impl_.container_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.cumulative_ = from._impl_.cumulative_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.usable_ = from._impl_.usable_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.forceuse_ = from._impl_.forceuse_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.multiuse_ = from._impl_.multiuse_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.liquidpool_ = from._impl_.liquidpool_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      _this->_impl_.unpass_ = from._impl_.unpass_;
    }
    if (cached_has_bits & 0x02000000u) {
      _this->_impl_.unmove_ = from._impl_.unmove_;
    }
    if (cached_has_bits & 0x04000000u) {
      _this->_impl_.unsight_ = from._impl_.unsight_;
    }
    if (cached_has_bits & 0x08000000u) {
      _this->_impl_.avoid_ = from._impl_.avoid_;
    }
    if (cached_has_bits & 0x10000000u) {
      _this->_impl_.no_movement_animation_ = from._impl_.no_movement_animation_;
    }
    if (cached_has_bits & 0x20000000u) {
      _this->_impl_.take_ = from._impl_.take_;
    }
    if (cached_has_bits & 0x40000000u) {
      _this->_impl_.liquidcontainer_ = from._impl_.liquidcontainer_;
    }
    if (cached_has_bits & 0x80000000u) {
      _this->_impl_.hang_ = from._impl_.hang_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._impl_._has_bits_[1];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.rotate_ = from._impl_.rotate_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.dont_hide_ = from._impl_.dont_hide_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.translucent_ = from._impl_.translucent_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.lying_object_ = from._impl_.lying_object_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.animate_always_ = from._impl_.animate_always_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.fullbank_ = from._impl_.fullbank_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.ignore_look_ = from._impl_.ignore_look_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.wrap_ = from._impl_.wrap_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.unwrap_ = from._impl_.unwrap_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.topeffect_ = from._impl_.topeffect_;
    }
    if (cached_has_bits & 0x00000400u) {
      _this->_impl_.corpse_ = from._impl_.corpse_;
    }
    if (cached_has_bits & 0x00000800u) {
      _this->_impl_.player_corpse_ = from._impl_.player_corpse_;
    }
    if (cached_has_bits & 0x00001000u) {
      _this->_impl_.ammo_ = from._impl_.ammo_;
    }
    if (cached_has_bits & 0x00002000u) {
      _this->_impl_.show_off_socket_ = from._impl_.show_off_socket_;
    }
    if (cached_has_bits & 0x00004000u) {
      _this->_impl_.reportable_ = from._impl_.reportable_;
    }
    if (cached_has_bits & 0x00008000u) {
      _this->_impl_.reverse_addons_east_ = from._impl_.reverse_addons_east_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      _this->_impl_.reverse_addons_west_ = from._impl_.reverse_addons_west_;
    }
    if (cached_has_bits & 0x00020000u) {
      _this->_impl_.reverse_addons_south_ = from._impl_.reverse_addons_south_;
    }
    if (cached_has_bits & 0x00040000u) {
      _this->_impl_.reverse_addons_north_ = from._impl_.reverse_addons_north_;
    }
    if (cached_has_bits & 0x00080000u) {
      _this->_impl_.wearout_ = from._impl_.wearout_;
    }
    if (cached_has_bits & 0x00100000u) {
      _this->_impl_.clockexpire_ = from._impl_.clockexpire_;
    }
    if (cached_has_bits & 0x00200000u) {
      _this->_impl_.expire_ = from._impl_.expire_;
    }
    if (cached_has_bits & 0x00400000u) {
      _this->_impl_.expirestop_ = from._impl_.expirestop_;
    }
    if (cached_has_bits & 0x00800000u) {
      _this->_impl_.deco_kit_ = from._impl_.deco_kit_;
    }
    _this->_impl_._has_bits_[1] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlags::CopyFrom(const AppearanceFlags& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlags)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlags::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlags::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlags::InternalSwap(AppearanceFlags* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_._has_bits_[1], other->_impl_._has_bits_[1]);
  _impl_.npcsaledata_.InternalSwap(&other->_impl_.npcsaledata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.deco_kit_)
      + sizeof(AppearanceFlags::_impl_.deco_kit_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlags, _impl_.bank_)>(
          reinterpret_cast<char*>(&_impl_.bank_),
          reinterpret_cast<char*>(&other->_impl_.bank_));
}

::google::protobuf::Metadata AppearanceFlags::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[8]);
}
// ===================================================================

class AppearanceFlagUpgradeClassification::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagUpgradeClassification>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagUpgradeClassification, _impl_._has_bits_);
  static void set_has_upgrade_classification(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AppearanceFlagUpgradeClassification::AppearanceFlagUpgradeClassification(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagUpgradeClassification)
}
AppearanceFlagUpgradeClassification::AppearanceFlagUpgradeClassification(
    ::google::protobuf::Arena* arena, const AppearanceFlagUpgradeClassification& from)
    : AppearanceFlagUpgradeClassification(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagUpgradeClassification::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagUpgradeClassification::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.upgrade_classification_ = {};
}
AppearanceFlagUpgradeClassification::~AppearanceFlagUpgradeClassification() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagUpgradeClassification)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagUpgradeClassification::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagUpgradeClassification::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagUpgradeClassification)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.upgrade_classification_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagUpgradeClassification::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagUpgradeClassification::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagUpgradeClassification, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagUpgradeClassification_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 upgrade_classification = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagUpgradeClassification, _impl_.upgrade_classification_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagUpgradeClassification, _impl_.upgrade_classification_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 upgrade_classification = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagUpgradeClassification, _impl_.upgrade_classification_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagUpgradeClassification::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagUpgradeClassification)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 upgrade_classification = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_upgrade_classification(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagUpgradeClassification)
  return target;
}

::size_t AppearanceFlagUpgradeClassification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagUpgradeClassification)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 upgrade_classification = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_upgrade_classification());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagUpgradeClassification::_class_data_ = {
    AppearanceFlagUpgradeClassification::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagUpgradeClassification::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagUpgradeClassification::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagUpgradeClassification*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagUpgradeClassification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagUpgradeClassification)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_upgrade_classification(from._internal_upgrade_classification());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagUpgradeClassification::CopyFrom(const AppearanceFlagUpgradeClassification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagUpgradeClassification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagUpgradeClassification::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagUpgradeClassification::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagUpgradeClassification::InternalSwap(AppearanceFlagUpgradeClassification* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.upgrade_classification_, other->_impl_.upgrade_classification_);
}

::google::protobuf::Metadata AppearanceFlagUpgradeClassification::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[9]);
}
// ===================================================================

class AppearanceFlagBank::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagBank>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagBank, _impl_._has_bits_);
  static void set_has_waypoints(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AppearanceFlagBank::AppearanceFlagBank(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagBank)
}
AppearanceFlagBank::AppearanceFlagBank(
    ::google::protobuf::Arena* arena, const AppearanceFlagBank& from)
    : AppearanceFlagBank(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagBank::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagBank::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.waypoints_ = {};
}
AppearanceFlagBank::~AppearanceFlagBank() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagBank)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagBank::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagBank::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagBank)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.waypoints_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagBank::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagBank::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagBank, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagBank_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 waypoints = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagBank, _impl_.waypoints_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagBank, _impl_.waypoints_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 waypoints = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagBank, _impl_.waypoints_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagBank::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagBank)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 waypoints = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_waypoints(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagBank)
  return target;
}

::size_t AppearanceFlagBank::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagBank)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 waypoints = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_waypoints());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagBank::_class_data_ = {
    AppearanceFlagBank::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagBank::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagBank::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagBank*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagBank&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagBank)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_waypoints(from._internal_waypoints());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagBank::CopyFrom(const AppearanceFlagBank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagBank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagBank::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagBank::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagBank::InternalSwap(AppearanceFlagBank* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.waypoints_, other->_impl_.waypoints_);
}

::google::protobuf::Metadata AppearanceFlagBank::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[10]);
}
// ===================================================================

class AppearanceFlagWrite::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagWrite>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagWrite, _impl_._has_bits_);
  static void set_has_max_text_length(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AppearanceFlagWrite::AppearanceFlagWrite(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagWrite)
}
AppearanceFlagWrite::AppearanceFlagWrite(
    ::google::protobuf::Arena* arena, const AppearanceFlagWrite& from)
    : AppearanceFlagWrite(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagWrite::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagWrite::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.max_text_length_ = {};
}
AppearanceFlagWrite::~AppearanceFlagWrite() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagWrite)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagWrite::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagWrite::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagWrite)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.max_text_length_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagWrite::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagWrite::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagWrite, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagWrite_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 max_text_length = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagWrite, _impl_.max_text_length_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagWrite, _impl_.max_text_length_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 max_text_length = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagWrite, _impl_.max_text_length_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagWrite::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagWrite)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 max_text_length = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_max_text_length(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagWrite)
  return target;
}

::size_t AppearanceFlagWrite::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagWrite)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 max_text_length = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_max_text_length());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagWrite::_class_data_ = {
    AppearanceFlagWrite::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagWrite::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagWrite::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagWrite*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagWrite&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagWrite)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_max_text_length(from._internal_max_text_length());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagWrite::CopyFrom(const AppearanceFlagWrite& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagWrite)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagWrite::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagWrite::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagWrite::InternalSwap(AppearanceFlagWrite* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.max_text_length_, other->_impl_.max_text_length_);
}

::google::protobuf::Metadata AppearanceFlagWrite::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[11]);
}
// ===================================================================

class AppearanceFlagWriteOnce::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagWriteOnce>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagWriteOnce, _impl_._has_bits_);
  static void set_has_max_text_length_once(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AppearanceFlagWriteOnce::AppearanceFlagWriteOnce(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagWriteOnce)
}
AppearanceFlagWriteOnce::AppearanceFlagWriteOnce(
    ::google::protobuf::Arena* arena, const AppearanceFlagWriteOnce& from)
    : AppearanceFlagWriteOnce(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagWriteOnce::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagWriteOnce::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.max_text_length_once_ = {};
}
AppearanceFlagWriteOnce::~AppearanceFlagWriteOnce() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagWriteOnce)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagWriteOnce::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagWriteOnce::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagWriteOnce)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.max_text_length_once_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagWriteOnce::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagWriteOnce::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagWriteOnce, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagWriteOnce_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 max_text_length_once = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagWriteOnce, _impl_.max_text_length_once_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagWriteOnce, _impl_.max_text_length_once_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 max_text_length_once = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagWriteOnce, _impl_.max_text_length_once_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagWriteOnce::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagWriteOnce)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 max_text_length_once = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_max_text_length_once(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagWriteOnce)
  return target;
}

::size_t AppearanceFlagWriteOnce::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagWriteOnce)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 max_text_length_once = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_max_text_length_once());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagWriteOnce::_class_data_ = {
    AppearanceFlagWriteOnce::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagWriteOnce::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagWriteOnce::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagWriteOnce*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagWriteOnce&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagWriteOnce)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_max_text_length_once(from._internal_max_text_length_once());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagWriteOnce::CopyFrom(const AppearanceFlagWriteOnce& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagWriteOnce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagWriteOnce::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagWriteOnce::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagWriteOnce::InternalSwap(AppearanceFlagWriteOnce* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.max_text_length_once_, other->_impl_.max_text_length_once_);
}

::google::protobuf::Metadata AppearanceFlagWriteOnce::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[12]);
}
// ===================================================================

class AppearanceFlagLight::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagLight>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_._has_bits_);
  static void set_has_brightness(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_color(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AppearanceFlagLight::AppearanceFlagLight(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagLight)
}
AppearanceFlagLight::AppearanceFlagLight(
    ::google::protobuf::Arena* arena, const AppearanceFlagLight& from)
    : AppearanceFlagLight(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagLight::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagLight::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, brightness_),
           0,
           offsetof(Impl_, color_) -
               offsetof(Impl_, brightness_) +
               sizeof(Impl_::color_));
}
AppearanceFlagLight::~AppearanceFlagLight() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagLight)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagLight::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagLight::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagLight)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.brightness_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.color_) -
        reinterpret_cast<char*>(&_impl_.brightness_)) + sizeof(_impl_.color_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagLight::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AppearanceFlagLight::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagLight_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 color = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagLight, _impl_.color_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.color_)}},
    // optional uint32 brightness = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagLight, _impl_.brightness_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.brightness_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 brightness = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.brightness_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 color = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.color_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagLight::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagLight)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 brightness = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_brightness(), target);
  }

  // optional uint32 color = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_color(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagLight)
  return target;
}

::size_t AppearanceFlagLight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagLight)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 brightness = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_brightness());
    }

    // optional uint32 color = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_color());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagLight::_class_data_ = {
    AppearanceFlagLight::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagLight::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagLight::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagLight*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagLight&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagLight)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.brightness_ = from._impl_.brightness_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.color_ = from._impl_.color_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagLight::CopyFrom(const AppearanceFlagLight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagLight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagLight::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagLight::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagLight::InternalSwap(AppearanceFlagLight* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.color_)
      + sizeof(AppearanceFlagLight::_impl_.color_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlagLight, _impl_.brightness_)>(
          reinterpret_cast<char*>(&_impl_.brightness_),
          reinterpret_cast<char*>(&other->_impl_.brightness_));
}

::google::protobuf::Metadata AppearanceFlagLight::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[13]);
}
// ===================================================================

class AppearanceFlagHeight::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagHeight>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagHeight, _impl_._has_bits_);
  static void set_has_elevation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AppearanceFlagHeight::AppearanceFlagHeight(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagHeight)
}
AppearanceFlagHeight::AppearanceFlagHeight(
    ::google::protobuf::Arena* arena, const AppearanceFlagHeight& from)
    : AppearanceFlagHeight(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagHeight::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagHeight::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.elevation_ = {};
}
AppearanceFlagHeight::~AppearanceFlagHeight() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagHeight)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagHeight::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagHeight::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagHeight)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.elevation_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagHeight::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagHeight::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagHeight, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagHeight_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 elevation = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagHeight, _impl_.elevation_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagHeight, _impl_.elevation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 elevation = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagHeight, _impl_.elevation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagHeight::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagHeight)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 elevation = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_elevation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagHeight)
  return target;
}

::size_t AppearanceFlagHeight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagHeight)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 elevation = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_elevation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagHeight::_class_data_ = {
    AppearanceFlagHeight::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagHeight::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagHeight::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagHeight*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagHeight&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagHeight)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_elevation(from._internal_elevation());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagHeight::CopyFrom(const AppearanceFlagHeight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagHeight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagHeight::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagHeight::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagHeight::InternalSwap(AppearanceFlagHeight* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.elevation_, other->_impl_.elevation_);
}

::google::protobuf::Metadata AppearanceFlagHeight::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[14]);
}
// ===================================================================

class AppearanceFlagShift::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagShift>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AppearanceFlagShift::AppearanceFlagShift(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagShift)
}
AppearanceFlagShift::AppearanceFlagShift(
    ::google::protobuf::Arena* arena, const AppearanceFlagShift& from)
    : AppearanceFlagShift(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagShift::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagShift::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, y_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::y_));
}
AppearanceFlagShift::~AppearanceFlagShift() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagShift)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagShift::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagShift::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagShift)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.y_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagShift::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AppearanceFlagShift::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagShift_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 y = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagShift, _impl_.y_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.y_)}},
    // optional uint32 x = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagShift, _impl_.x_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.x_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 x = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 y = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagShift::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagShift)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_x(), target);
  }

  // optional uint32 y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagShift)
  return target;
}

::size_t AppearanceFlagShift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagShift)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional uint32 x = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_x());
    }

    // optional uint32 y = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_y());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagShift::_class_data_ = {
    AppearanceFlagShift::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagShift::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagShift::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagShift*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagShift&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagShift)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagShift::CopyFrom(const AppearanceFlagShift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagShift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagShift::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagShift::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagShift::InternalSwap(AppearanceFlagShift* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.y_)
      + sizeof(AppearanceFlagShift::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlagShift, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata AppearanceFlagShift::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[15]);
}
// ===================================================================

class AppearanceFlagClothes::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagClothes>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagClothes, _impl_._has_bits_);
  static void set_has_slot(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AppearanceFlagClothes::AppearanceFlagClothes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagClothes)
}
AppearanceFlagClothes::AppearanceFlagClothes(
    ::google::protobuf::Arena* arena, const AppearanceFlagClothes& from)
    : AppearanceFlagClothes(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagClothes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagClothes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.slot_ = {};
}
AppearanceFlagClothes::~AppearanceFlagClothes() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagClothes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagClothes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagClothes::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagClothes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slot_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagClothes::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagClothes::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagClothes, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagClothes_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 slot = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagClothes, _impl_.slot_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagClothes, _impl_.slot_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 slot = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagClothes, _impl_.slot_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagClothes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagClothes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 slot = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_slot(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagClothes)
  return target;
}

::size_t AppearanceFlagClothes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagClothes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 slot = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_slot());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagClothes::_class_data_ = {
    AppearanceFlagClothes::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagClothes::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagClothes::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagClothes*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagClothes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagClothes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_slot(from._internal_slot());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagClothes::CopyFrom(const AppearanceFlagClothes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagClothes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagClothes::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagClothes::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagClothes::InternalSwap(AppearanceFlagClothes* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.slot_, other->_impl_.slot_);
}

::google::protobuf::Metadata AppearanceFlagClothes::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[16]);
}
// ===================================================================

class AppearanceFlagDefaultAction::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagDefaultAction>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagDefaultAction, _impl_._has_bits_);
  static void set_has_action(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AppearanceFlagDefaultAction::AppearanceFlagDefaultAction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagDefaultAction)
}
AppearanceFlagDefaultAction::AppearanceFlagDefaultAction(
    ::google::protobuf::Arena* arena, const AppearanceFlagDefaultAction& from)
    : AppearanceFlagDefaultAction(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagDefaultAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagDefaultAction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.action_ = {};
}
AppearanceFlagDefaultAction::~AppearanceFlagDefaultAction() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagDefaultAction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagDefaultAction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagDefaultAction::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagDefaultAction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.action_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagDefaultAction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> AppearanceFlagDefaultAction::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagDefaultAction, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AppearanceFlagDefaultAction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .otclient.protobuf.appearances.PLAYER_ACTION action = 1;
    {::_pbi::TcParser::FastEr0S1,
     {8, 0, 4, PROTOBUF_FIELD_OFFSET(AppearanceFlagDefaultAction, _impl_.action_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .otclient.protobuf.appearances.PLAYER_ACTION action = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagDefaultAction, _impl_.action_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {0, 5},
  }}, {{
  }},
};

::uint8_t* AppearanceFlagDefaultAction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagDefaultAction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.PLAYER_ACTION action = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagDefaultAction)
  return target;
}

::size_t AppearanceFlagDefaultAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagDefaultAction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .otclient.protobuf.appearances.PLAYER_ACTION action = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_action());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagDefaultAction::_class_data_ = {
    AppearanceFlagDefaultAction::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagDefaultAction::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagDefaultAction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagDefaultAction*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagDefaultAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagDefaultAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagDefaultAction::CopyFrom(const AppearanceFlagDefaultAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagDefaultAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagDefaultAction::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagDefaultAction::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagDefaultAction::InternalSwap(AppearanceFlagDefaultAction* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.action_, other->_impl_.action_);
}

::google::protobuf::Metadata AppearanceFlagDefaultAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[17]);
}
// ===================================================================

class AppearanceFlagMarket::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagMarket>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_._has_bits_);
  static void set_has_category(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_trade_as_object_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_show_as_object_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_minimum_level(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

AppearanceFlagMarket::AppearanceFlagMarket(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagMarket)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagMarket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        restrict_to_profession_{visibility, arena, from.restrict_to_profession_},
        name_(arena, from.name_) {}

AppearanceFlagMarket::AppearanceFlagMarket(
    ::google::protobuf::Arena* arena,
    const AppearanceFlagMarket& from)
    : ::google::protobuf::Message(arena) {
  AppearanceFlagMarket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trade_as_object_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, trade_as_object_id_),
           offsetof(Impl_, category_) -
               offsetof(Impl_, trade_as_object_id_) +
               sizeof(Impl_::category_));

  // @@protoc_insertion_point(copy_constructor:otclient.protobuf.appearances.AppearanceFlagMarket)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagMarket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        restrict_to_profession_{visibility, arena},
        name_(arena),
        category_{static_cast< ::otclient::protobuf::appearances::ITEM_CATEGORY >(1)} {}

inline void AppearanceFlagMarket::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, trade_as_object_id_),
           0,
           offsetof(Impl_, minimum_level_) -
               offsetof(Impl_, trade_as_object_id_) +
               sizeof(Impl_::minimum_level_));
}
AppearanceFlagMarket::~AppearanceFlagMarket() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagMarket)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagMarket::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagMarket::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagMarket)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.restrict_to_profession_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.name_.ClearNonDefaultToEmpty();
  }
  if (cached_has_bits & 0x0000001eu) {
    ::memset(&_impl_.trade_as_object_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.minimum_level_) -
        reinterpret_cast<char*>(&_impl_.trade_as_object_id_)) + sizeof(_impl_.minimum_level_));
    _impl_.category_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagMarket::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 63, 2> AppearanceFlagMarket::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AppearanceFlagMarket_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional .otclient.protobuf.appearances.ITEM_CATEGORY category = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 4, 24, PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.category_)}},
    // optional uint32 trade_as_object_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagMarket, _impl_.trade_as_object_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.trade_as_object_id_)}},
    // optional uint32 show_as_object_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagMarket, _impl_.show_as_object_id_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.show_as_object_id_)}},
    // optional string name = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.name_)}},
    // repeated .otclient.protobuf.appearances.PLAYER_PROFESSION restrict_to_profession = 5;
    {::_pbi::TcParser::FastEvR1,
     {40, 63, 1, PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.restrict_to_profession_)}},
    // optional uint32 minimum_level = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagMarket, _impl_.minimum_level_), 3>(),
     {48, 3, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.minimum_level_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .otclient.protobuf.appearances.ITEM_CATEGORY category = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.category_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional uint32 trade_as_object_id = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.trade_as_object_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 show_as_object_id = 3;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.show_as_object_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string name = 4;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // repeated .otclient.protobuf.appearances.PLAYER_PROFESSION restrict_to_profession = 5;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.restrict_to_profession_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kEnum)},
    // optional uint32 minimum_level = 6;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.minimum_level_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }}, {{
    {1, 24},
    {::_pbi::FieldAuxEnumData{}, ::otclient::protobuf::appearances::PLAYER_PROFESSION_internal_data_},
  }}, {{
    "\62\0\0\0\4\0\0\0"
    "otclient.protobuf.appearances.AppearanceFlagMarket"
    "name"
  }},
};

::uint8_t* AppearanceFlagMarket::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagMarket)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.ITEM_CATEGORY category = 1;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_category(), target);
  }

  // optional uint32 trade_as_object_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_trade_as_object_id(), target);
  }

  // optional uint32 show_as_object_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_show_as_object_id(), target);
  }

  // optional string name = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "otclient.protobuf.appearances.AppearanceFlagMarket.name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // repeated .otclient.protobuf.appearances.PLAYER_PROFESSION restrict_to_profession = 5;
  for (int i = 0, n = this->_internal_restrict_to_profession_size(); i < n; ++i) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        5, static_cast<::otclient::protobuf::appearances::PLAYER_PROFESSION>(this->_internal_restrict_to_profession().Get(i)),
        target);
  }

  // optional uint32 minimum_level = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_minimum_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagMarket)
  return target;
}

::size_t AppearanceFlagMarket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagMarket)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .otclient.protobuf.appearances.PLAYER_PROFESSION restrict_to_profession = 5;
  {
    std::size_t data_size = 0;
    auto count = static_cast<std::size_t>(this->_internal_restrict_to_profession_size());

    for (std::size_t i = 0; i < count; ++i) {
      data_size += ::_pbi::WireFormatLite::EnumSize(
          this->_internal_restrict_to_profession().Get(static_cast<int>(i)));
    }
    total_size += data_size;
    total_size += std::size_t{1} * count;
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string name = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional uint32 trade_as_object_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_trade_as_object_id());
    }

    // optional uint32 show_as_object_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_show_as_object_id());
    }

    // optional uint32 minimum_level = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_minimum_level());
    }

    // optional .otclient.protobuf.appearances.ITEM_CATEGORY category = 1;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_category());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagMarket::_class_data_ = {
    AppearanceFlagMarket::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagMarket::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagMarket::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagMarket*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagMarket&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagMarket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_restrict_to_profession()->MergeFrom(from._internal_restrict_to_profession());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.trade_as_object_id_ = from._impl_.trade_as_object_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.show_as_object_id_ = from._impl_.show_as_object_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.minimum_level_ = from._impl_.minimum_level_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.category_ = from._impl_.category_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagMarket::CopyFrom(const AppearanceFlagMarket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagMarket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagMarket::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagMarket::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagMarket::InternalSwap(AppearanceFlagMarket* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.restrict_to_profession_.InternalSwap(&other->_impl_.restrict_to_profession_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.category_)
      + sizeof(AppearanceFlagMarket::_impl_.category_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlagMarket, _impl_.trade_as_object_id_)>(
          reinterpret_cast<char*>(&_impl_.trade_as_object_id_),
          reinterpret_cast<char*>(&other->_impl_.trade_as_object_id_));
}

::google::protobuf::Metadata AppearanceFlagMarket::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[18]);
}
// ===================================================================

class AppearanceFlagNPC::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagNPC>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_location(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_sale_price(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_buy_price(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_currency_object_type_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_currency_quest_flag_display_name(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

AppearanceFlagNPC::AppearanceFlagNPC(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagNPC)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagNPC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        location_(arena, from.location_),
        currency_quest_flag_display_name_(arena, from.currency_quest_flag_display_name_) {}

AppearanceFlagNPC::AppearanceFlagNPC(
    ::google::protobuf::Arena* arena,
    const AppearanceFlagNPC& from)
    : ::google::protobuf::Message(arena) {
  AppearanceFlagNPC* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sale_price_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sale_price_),
           offsetof(Impl_, currency_object_type_id_) -
               offsetof(Impl_, sale_price_) +
               sizeof(Impl_::currency_object_type_id_));

  // @@protoc_insertion_point(copy_constructor:otclient.protobuf.appearances.AppearanceFlagNPC)
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagNPC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        location_(arena),
        currency_quest_flag_display_name_(arena) {}

inline void AppearanceFlagNPC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sale_price_),
           0,
           offsetof(Impl_, currency_object_type_id_) -
               offsetof(Impl_, sale_price_) +
               sizeof(Impl_::currency_object_type_id_));
}
AppearanceFlagNPC::~AppearanceFlagNPC() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagNPC)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagNPC::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.location_.Destroy();
  _impl_.currency_quest_flag_display_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagNPC::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagNPC)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.location_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.currency_quest_flag_display_name_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000038u) {
    ::memset(&_impl_.sale_price_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.currency_object_type_id_) -
        reinterpret_cast<char*>(&_impl_.sale_price_)) + sizeof(_impl_.currency_object_type_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagNPC::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 100, 2> AppearanceFlagNPC::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagNPC_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string name = 1;
    {::_pbi::TcParser::FastSS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.name_)}},
    // optional string location = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.location_)}},
    // optional uint32 sale_price = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagNPC, _impl_.sale_price_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.sale_price_)}},
    // optional uint32 buy_price = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagNPC, _impl_.buy_price_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.buy_price_)}},
    // optional uint32 currency_object_type_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagNPC, _impl_.currency_object_type_id_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.currency_object_type_id_)}},
    // optional string currency_quest_flag_display_name = 6;
    {::_pbi::TcParser::FastSS1,
     {50, 2, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.currency_quest_flag_display_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string name = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string location = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.location_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional uint32 sale_price = 3;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.sale_price_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 buy_price = 4;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.buy_price_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 currency_object_type_id = 5;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.currency_object_type_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional string currency_quest_flag_display_name = 6;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.currency_quest_flag_display_name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\4\10\0\0\0\40\0"
    "otclient.protobuf.appearances.AppearanceFlagNPC"
    "name"
    "location"
    "currency_quest_flag_display_name"
  }},
};

::uint8_t* AppearanceFlagNPC::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagNPC)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "otclient.protobuf.appearances.AppearanceFlagNPC.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // optional string location = 2;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_location();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "otclient.protobuf.appearances.AppearanceFlagNPC.location");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional uint32 sale_price = 3;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_sale_price(), target);
  }

  // optional uint32 buy_price = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_buy_price(), target);
  }

  // optional uint32 currency_object_type_id = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_currency_object_type_id(), target);
  }

  // optional string currency_quest_flag_display_name = 6;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_currency_quest_flag_display_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "otclient.protobuf.appearances.AppearanceFlagNPC.currency_quest_flag_display_name");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagNPC)
  return target;
}

::size_t AppearanceFlagNPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagNPC)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional string name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

    // optional string location = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_location());
    }

    // optional string currency_quest_flag_display_name = 6;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_currency_quest_flag_display_name());
    }

    // optional uint32 sale_price = 3;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_sale_price());
    }

    // optional uint32 buy_price = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_buy_price());
    }

    // optional uint32 currency_object_type_id = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_currency_object_type_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagNPC::_class_data_ = {
    AppearanceFlagNPC::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagNPC::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagNPC::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagNPC*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagNPC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagNPC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_location(from._internal_location());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_currency_quest_flag_display_name(from._internal_currency_quest_flag_display_name());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.sale_price_ = from._impl_.sale_price_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.buy_price_ = from._impl_.buy_price_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.currency_object_type_id_ = from._impl_.currency_object_type_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagNPC::CopyFrom(const AppearanceFlagNPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagNPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagNPC::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagNPC::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagNPC::InternalSwap(AppearanceFlagNPC* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.location_, &other->_impl_.location_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_quest_flag_display_name_, &other->_impl_.currency_quest_flag_display_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.currency_object_type_id_)
      + sizeof(AppearanceFlagNPC::_impl_.currency_object_type_id_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlagNPC, _impl_.sale_price_)>(
          reinterpret_cast<char*>(&_impl_.sale_price_),
          reinterpret_cast<char*>(&other->_impl_.sale_price_));
}

::google::protobuf::Metadata AppearanceFlagNPC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[19]);
}
// ===================================================================

class AppearanceFlagAutomap::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagAutomap>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagAutomap, _impl_._has_bits_);
  static void set_has_color(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AppearanceFlagAutomap::AppearanceFlagAutomap(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagAutomap)
}
AppearanceFlagAutomap::AppearanceFlagAutomap(
    ::google::protobuf::Arena* arena, const AppearanceFlagAutomap& from)
    : AppearanceFlagAutomap(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagAutomap::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagAutomap::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.color_ = {};
}
AppearanceFlagAutomap::~AppearanceFlagAutomap() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagAutomap)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagAutomap::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagAutomap::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagAutomap)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.color_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagAutomap::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagAutomap::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagAutomap, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagAutomap_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 color = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagAutomap, _impl_.color_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagAutomap, _impl_.color_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 color = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagAutomap, _impl_.color_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagAutomap::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagAutomap)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 color = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_color(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagAutomap)
  return target;
}

::size_t AppearanceFlagAutomap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagAutomap)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 color = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_color());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagAutomap::_class_data_ = {
    AppearanceFlagAutomap::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagAutomap::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagAutomap::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagAutomap*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagAutomap&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagAutomap)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_color(from._internal_color());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagAutomap::CopyFrom(const AppearanceFlagAutomap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagAutomap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagAutomap::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagAutomap::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagAutomap::InternalSwap(AppearanceFlagAutomap* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.color_, other->_impl_.color_);
}

::google::protobuf::Metadata AppearanceFlagAutomap::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[20]);
}
// ===================================================================

class AppearanceFlagHook::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagHook>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_._has_bits_);
  static void set_has_south(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_east(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

AppearanceFlagHook::AppearanceFlagHook(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagHook)
}
AppearanceFlagHook::AppearanceFlagHook(
    ::google::protobuf::Arena* arena, const AppearanceFlagHook& from)
    : AppearanceFlagHook(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagHook::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        south_{static_cast< ::otclient::protobuf::appearances::HOOK_TYPE >(1)},
        east_{static_cast< ::otclient::protobuf::appearances::HOOK_TYPE >(1)} {}

inline void AppearanceFlagHook::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AppearanceFlagHook::~AppearanceFlagHook() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagHook)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagHook::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagHook::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagHook)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    _impl_.south_ = 1;
    _impl_.east_ = 1;
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagHook::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> AppearanceFlagHook::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AppearanceFlagHook_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .otclient.protobuf.appearances.HOOK_TYPE east = 2;
    {::_pbi::TcParser::FastEr1S1,
     {16, 1, 2, PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_.east_)}},
    // optional .otclient.protobuf.appearances.HOOK_TYPE south = 1;
    {::_pbi::TcParser::FastEr1S1,
     {8, 0, 2, PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_.south_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional .otclient.protobuf.appearances.HOOK_TYPE south = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_.south_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
    // optional .otclient.protobuf.appearances.HOOK_TYPE east = 2;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_.east_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kEnumRange)},
  }}, {{
    {1, 2},
    {1, 2},
  }}, {{
  }},
};

::uint8_t* AppearanceFlagHook::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagHook)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional .otclient.protobuf.appearances.HOOK_TYPE south = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_south(), target);
  }

  // optional .otclient.protobuf.appearances.HOOK_TYPE east = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_east(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagHook)
  return target;
}

::size_t AppearanceFlagHook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagHook)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .otclient.protobuf.appearances.HOOK_TYPE south = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_south());
    }

    // optional .otclient.protobuf.appearances.HOOK_TYPE east = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
                    ::_pbi::WireFormatLite::EnumSize(this->_internal_east());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagHook::_class_data_ = {
    AppearanceFlagHook::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagHook::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagHook::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagHook*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagHook&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagHook)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.south_ = from._impl_.south_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.east_ = from._impl_.east_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagHook::CopyFrom(const AppearanceFlagHook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagHook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagHook::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagHook::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagHook::InternalSwap(AppearanceFlagHook* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_.east_)
      + sizeof(AppearanceFlagHook::_impl_.east_)
      - PROTOBUF_FIELD_OFFSET(AppearanceFlagHook, _impl_.south_)>(
          reinterpret_cast<char*>(&_impl_.south_),
          reinterpret_cast<char*>(&other->_impl_.south_));
}

::google::protobuf::Metadata AppearanceFlagHook::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[21]);
}
// ===================================================================

class AppearanceFlagLenshelp::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagLenshelp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagLenshelp, _impl_._has_bits_);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AppearanceFlagLenshelp::AppearanceFlagLenshelp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagLenshelp)
}
AppearanceFlagLenshelp::AppearanceFlagLenshelp(
    ::google::protobuf::Arena* arena, const AppearanceFlagLenshelp& from)
    : AppearanceFlagLenshelp(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagLenshelp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagLenshelp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
AppearanceFlagLenshelp::~AppearanceFlagLenshelp() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagLenshelp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagLenshelp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagLenshelp::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagLenshelp)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagLenshelp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagLenshelp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagLenshelp, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagLenshelp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagLenshelp, _impl_.id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagLenshelp, _impl_.id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 id = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagLenshelp, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagLenshelp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagLenshelp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagLenshelp)
  return target;
}

::size_t AppearanceFlagLenshelp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagLenshelp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagLenshelp::_class_data_ = {
    AppearanceFlagLenshelp::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagLenshelp::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagLenshelp::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagLenshelp*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagLenshelp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagLenshelp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagLenshelp::CopyFrom(const AppearanceFlagLenshelp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagLenshelp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagLenshelp::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagLenshelp::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagLenshelp::InternalSwap(AppearanceFlagLenshelp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata AppearanceFlagLenshelp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[22]);
}
// ===================================================================

class AppearanceFlagChangedToExpire::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagChangedToExpire>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagChangedToExpire, _impl_._has_bits_);
  static void set_has_former_object_typeid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AppearanceFlagChangedToExpire::AppearanceFlagChangedToExpire(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagChangedToExpire)
}
AppearanceFlagChangedToExpire::AppearanceFlagChangedToExpire(
    ::google::protobuf::Arena* arena, const AppearanceFlagChangedToExpire& from)
    : AppearanceFlagChangedToExpire(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagChangedToExpire::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagChangedToExpire::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.former_object_typeid_ = {};
}
AppearanceFlagChangedToExpire::~AppearanceFlagChangedToExpire() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagChangedToExpire)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagChangedToExpire::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagChangedToExpire::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagChangedToExpire)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.former_object_typeid_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagChangedToExpire::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagChangedToExpire::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagChangedToExpire, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagChangedToExpire_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 former_object_typeid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagChangedToExpire, _impl_.former_object_typeid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagChangedToExpire, _impl_.former_object_typeid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 former_object_typeid = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagChangedToExpire, _impl_.former_object_typeid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagChangedToExpire::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagChangedToExpire)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 former_object_typeid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_former_object_typeid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagChangedToExpire)
  return target;
}

::size_t AppearanceFlagChangedToExpire::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagChangedToExpire)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 former_object_typeid = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_former_object_typeid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagChangedToExpire::_class_data_ = {
    AppearanceFlagChangedToExpire::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagChangedToExpire::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagChangedToExpire::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagChangedToExpire*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagChangedToExpire&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagChangedToExpire)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_former_object_typeid(from._internal_former_object_typeid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagChangedToExpire::CopyFrom(const AppearanceFlagChangedToExpire& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagChangedToExpire)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagChangedToExpire::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagChangedToExpire::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagChangedToExpire::InternalSwap(AppearanceFlagChangedToExpire* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.former_object_typeid_, other->_impl_.former_object_typeid_);
}

::google::protobuf::Metadata AppearanceFlagChangedToExpire::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[23]);
}
// ===================================================================

class AppearanceFlagCyclopedia::_Internal {
 public:
  using HasBits = decltype(std::declval<AppearanceFlagCyclopedia>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AppearanceFlagCyclopedia, _impl_._has_bits_);
  static void set_has_cyclopedia_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

AppearanceFlagCyclopedia::AppearanceFlagCyclopedia(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.AppearanceFlagCyclopedia)
}
AppearanceFlagCyclopedia::AppearanceFlagCyclopedia(
    ::google::protobuf::Arena* arena, const AppearanceFlagCyclopedia& from)
    : AppearanceFlagCyclopedia(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE AppearanceFlagCyclopedia::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void AppearanceFlagCyclopedia::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cyclopedia_type_ = {};
}
AppearanceFlagCyclopedia::~AppearanceFlagCyclopedia() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.AppearanceFlagCyclopedia)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AppearanceFlagCyclopedia::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void AppearanceFlagCyclopedia::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.AppearanceFlagCyclopedia)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cyclopedia_type_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AppearanceFlagCyclopedia::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AppearanceFlagCyclopedia::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AppearanceFlagCyclopedia, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AppearanceFlagCyclopedia_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional uint32 cyclopedia_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AppearanceFlagCyclopedia, _impl_.cyclopedia_type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(AppearanceFlagCyclopedia, _impl_.cyclopedia_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 cyclopedia_type = 1;
    {PROTOBUF_FIELD_OFFSET(AppearanceFlagCyclopedia, _impl_.cyclopedia_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AppearanceFlagCyclopedia::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.AppearanceFlagCyclopedia)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 cyclopedia_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_cyclopedia_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.AppearanceFlagCyclopedia)
  return target;
}

::size_t AppearanceFlagCyclopedia::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.AppearanceFlagCyclopedia)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional uint32 cyclopedia_type = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_cyclopedia_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AppearanceFlagCyclopedia::_class_data_ = {
    AppearanceFlagCyclopedia::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* AppearanceFlagCyclopedia::GetClassData() const {
  return &_class_data_;
}

void AppearanceFlagCyclopedia::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AppearanceFlagCyclopedia*>(&to_msg);
  auto& from = static_cast<const AppearanceFlagCyclopedia&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.AppearanceFlagCyclopedia)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_cyclopedia_type(from._internal_cyclopedia_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AppearanceFlagCyclopedia::CopyFrom(const AppearanceFlagCyclopedia& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.AppearanceFlagCyclopedia)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AppearanceFlagCyclopedia::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* AppearanceFlagCyclopedia::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void AppearanceFlagCyclopedia::InternalSwap(AppearanceFlagCyclopedia* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
        swap(_impl_.cyclopedia_type_, other->_impl_.cyclopedia_type_);
}

::google::protobuf::Metadata AppearanceFlagCyclopedia::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[24]);
}
// ===================================================================

class SpecialMeaningAppearanceIds::_Internal {
 public:
  using HasBits = decltype(std::declval<SpecialMeaningAppearanceIds>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_._has_bits_);
  static void set_has_gold_coin_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_platinum_coin_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_crystal_coin_id(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_tibia_coin_id(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_stamped_letter_id(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_supply_stash_id(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

SpecialMeaningAppearanceIds::SpecialMeaningAppearanceIds(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:otclient.protobuf.appearances.SpecialMeaningAppearanceIds)
}
SpecialMeaningAppearanceIds::SpecialMeaningAppearanceIds(
    ::google::protobuf::Arena* arena, const SpecialMeaningAppearanceIds& from)
    : SpecialMeaningAppearanceIds(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SpecialMeaningAppearanceIds::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SpecialMeaningAppearanceIds::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, gold_coin_id_),
           0,
           offsetof(Impl_, supply_stash_id_) -
               offsetof(Impl_, gold_coin_id_) +
               sizeof(Impl_::supply_stash_id_));
}
SpecialMeaningAppearanceIds::~SpecialMeaningAppearanceIds() {
  // @@protoc_insertion_point(destructor:otclient.protobuf.appearances.SpecialMeaningAppearanceIds)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SpecialMeaningAppearanceIds::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void SpecialMeaningAppearanceIds::Clear() {
// @@protoc_insertion_point(message_clear_start:otclient.protobuf.appearances.SpecialMeaningAppearanceIds)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&_impl_.gold_coin_id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.supply_stash_id_) -
        reinterpret_cast<char*>(&_impl_.gold_coin_id_)) + sizeof(_impl_.supply_stash_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SpecialMeaningAppearanceIds::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> SpecialMeaningAppearanceIds::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SpecialMeaningAppearanceIds_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 gold_coin_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.gold_coin_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.gold_coin_id_)}},
    // optional uint32 platinum_coin_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.platinum_coin_id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.platinum_coin_id_)}},
    // optional uint32 crystal_coin_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.crystal_coin_id_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.crystal_coin_id_)}},
    // optional uint32 tibia_coin_id = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.tibia_coin_id_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.tibia_coin_id_)}},
    // optional uint32 stamped_letter_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.stamped_letter_id_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.stamped_letter_id_)}},
    // optional uint32 supply_stash_id = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SpecialMeaningAppearanceIds, _impl_.supply_stash_id_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.supply_stash_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 gold_coin_id = 1;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.gold_coin_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 platinum_coin_id = 2;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.platinum_coin_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 crystal_coin_id = 3;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.crystal_coin_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 tibia_coin_id = 4;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.tibia_coin_id_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 stamped_letter_id = 5;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.stamped_letter_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 supply_stash_id = 6;
    {PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.supply_stash_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SpecialMeaningAppearanceIds::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:otclient.protobuf.appearances.SpecialMeaningAppearanceIds)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 gold_coin_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_gold_coin_id(), target);
  }

  // optional uint32 platinum_coin_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_platinum_coin_id(), target);
  }

  // optional uint32 crystal_coin_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_crystal_coin_id(), target);
  }

  // optional uint32 tibia_coin_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_tibia_coin_id(), target);
  }

  // optional uint32 stamped_letter_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_stamped_letter_id(), target);
  }

  // optional uint32 supply_stash_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_supply_stash_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:otclient.protobuf.appearances.SpecialMeaningAppearanceIds)
  return target;
}

::size_t SpecialMeaningAppearanceIds::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:otclient.protobuf.appearances.SpecialMeaningAppearanceIds)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional uint32 gold_coin_id = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_gold_coin_id());
    }

    // optional uint32 platinum_coin_id = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_platinum_coin_id());
    }

    // optional uint32 crystal_coin_id = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_crystal_coin_id());
    }

    // optional uint32 tibia_coin_id = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_tibia_coin_id());
    }

    // optional uint32 stamped_letter_id = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_stamped_letter_id());
    }

    // optional uint32 supply_stash_id = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_supply_stash_id());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SpecialMeaningAppearanceIds::_class_data_ = {
    SpecialMeaningAppearanceIds::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* SpecialMeaningAppearanceIds::GetClassData() const {
  return &_class_data_;
}

void SpecialMeaningAppearanceIds::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SpecialMeaningAppearanceIds*>(&to_msg);
  auto& from = static_cast<const SpecialMeaningAppearanceIds&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:otclient.protobuf.appearances.SpecialMeaningAppearanceIds)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.gold_coin_id_ = from._impl_.gold_coin_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.platinum_coin_id_ = from._impl_.platinum_coin_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.crystal_coin_id_ = from._impl_.crystal_coin_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.tibia_coin_id_ = from._impl_.tibia_coin_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.stamped_letter_id_ = from._impl_.stamped_letter_id_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.supply_stash_id_ = from._impl_.supply_stash_id_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SpecialMeaningAppearanceIds::CopyFrom(const SpecialMeaningAppearanceIds& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:otclient.protobuf.appearances.SpecialMeaningAppearanceIds)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SpecialMeaningAppearanceIds::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* SpecialMeaningAppearanceIds::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void SpecialMeaningAppearanceIds::InternalSwap(SpecialMeaningAppearanceIds* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.supply_stash_id_)
      + sizeof(SpecialMeaningAppearanceIds::_impl_.supply_stash_id_)
      - PROTOBUF_FIELD_OFFSET(SpecialMeaningAppearanceIds, _impl_.gold_coin_id_)>(
          reinterpret_cast<char*>(&_impl_.gold_coin_id_),
          reinterpret_cast<char*>(&other->_impl_.gold_coin_id_));
}

::google::protobuf::Metadata SpecialMeaningAppearanceIds::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_appearances_2eproto_getter, &descriptor_table_appearances_2eproto_once,
      file_level_metadata_appearances_2eproto[25]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace appearances
}  // namespace protobuf
}  // namespace otclient
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
